# PREAMBLE ---------------------------------------------------------------

library(tidyverse)
library(rgdal) 
library(leaflet)
library(knitr)
library(xaringan)
library(rmarkdown)
library(gridExtra)
library(widgetframe)
library(kableExtra)
library(ggthemes)
library(zoo)
library(lubridate)
library(formattable)

# INPUTS

c_month <- as.Date("2020-06-01")

tail_month <- as.Date("2019-06-01")

bal_date <- as.Date("2020-06-26")

c_month_end <- as.Date(paste0(year(c_month), "-", month(c_month), "-", as.character(days_in_month(c_month))))

c_year <- year(c_month)

c_month_lab <- paste(as.character(month(c_month, label = T, abbr = F)), c_year) 

month_todate <- month(c_month)



# PLOT FORMATS ----

background <- c("#e5e5df")

theme_mc <- theme_economist() + 
  theme(legend.position="none") + 
  theme(plot.title = element_text(size = 14, face = "bold")) +
  theme(axis.text = element_text(size = 10, vjust = 0.3, hjust = 0.5)) +
  theme(axis.title.y = element_text(size = 10)) +
  theme(axis.line.y = element_blank()) +
  theme(axis.ticks.y = element_blank()) +
  theme(plot.caption = element_text(hjust = 0, size = 9)) +
  theme(plot.background = element_rect(fill = background)) +  
  theme(panel.background = element_rect(fill = background)) +   
  theme(panel.grid.major.y =  element_line(color = "#b3b3b3", size = 0.2)) +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.y = element_blank()) 
  

stroke_size <- 0.75

line_color <- "#2166ac"

exp_color <- "#ac2221"

# IMPORT ------------------------------------------------------------------

d <- "C:/Users/matt/Dropbox/Other/Finance/R/Budget/" # parent directory for the data

f <- read_csv(paste0(d,"data/comb_in.csv"), skip = 0)

budget <- read_csv(paste0(d,"data/budget_2019.csv"), skip = 0)

balances <- read_csv(paste0(d,"data/balances.csv"), skip = 0)

# TIDY

f <- f[,c(2:length(names(f)))]

f$date <- as.Date(f$date, "%d/%m/%Y")

f$month <- paste0("01-",month(f$date, label = TRUE, abbr = TRUE), "-", year(f$date))

f$month <- as.Date(f$month, "%d-%b-%Y")

f$year <- year(f$date)

f <- f %>% 
  mutate(lab = ifelse(str_detect(cat, "misc"), "Misc.",
               ifelse(str_detect(cat, "groceries"), "Groceries",
                ifelse(str_detect(cat, "hif"), "HIF",
                ifelse(str_detect(cat, "other"), "Other",
                ifelse(str_detect(cat, "health"), "Health",
                ifelse(str_detect(cat, "dining"), "Dining",
                ifelse(str_detect(cat, "fuel"), "Fuel",
                ifelse(str_detect(cat, "books"), "Books",
                ifelse(str_detect(cat, "hair"), "Hair",
                ifelse(str_detect(cat, "clothing"), "Clothing",
                ifelse(str_detect(cat, "senate"), "Senate",
                ifelse(str_detect(cat, "bank_charges"), "Bank\ncharges",
                ifelse(str_detect(cat, "digital"), "Digital",
                ifelse(str_detect(cat, "sports"), "Sports",
                ifelse(str_detect(cat, "school"), "School",
                ifelse(str_detect(cat, "yepp_house"), "Yeppoon\nHouse",
                ifelse(str_detect(cat, "insurance"), "Insurance",
                ifelse(str_detect(cat, "canb_house"), "Canberra\nHouse",
                ifelse(str_detect(cat, "phone"), "Phone",
                ifelse(str_detect(cat, "car"), "Car",
                ifelse(str_detect(cat, "utilities"), "Utilities",
                ifelse(str_detect(cat, "transfer"), "Transfer",
                ifelse(str_detect(cat, "loan_repay"), "Loan\nrepayment",
                ifelse(str_detect(cat, "extra_loan_repay"), "Extra Loan\nrepayment",
                ifelse(str_detect(cat, "tax"), "Tax",
                ifelse(str_detect(cat, "income"), "Income",
                ifelse(str_detect(cat, "kids"), "Kids",
                ifelse(str_detect(cat, "travel"), "Travel",
                ifelse(str_detect(cat, "gifts"), "Gifts",
                ifelse(str_detect(cat, "new_ext"), "New\nExtension",
                                    "")))))))))))))))))))))))))))))))

f <- distinct(f)

f <- f %>% 
  arrange(desc(date))

# budget

budget <- budget[, 1:3]

budget <- budget %>% 
  mutate(ann_budget = ifelse(str_detect(type, "monthly"), budget * 12, budget * 1),
         mon_budget = ifelse(str_detect(type, "monthly"), budget, budget / 12),
         todate_budget = ann_budget * (month_todate/12))


# TRANSFORM

f_bymonth <- f %>% 
  group_by(cat, lab, month) %>% 
  summarise(amount = sum(amount)) 

f_cmonth <- f_bymonth %>% 
  filter(month == c_month)

f_cmonth <- inner_join(f_cmonth, budget[,c(1,5)], by = "cat")
  
f_byyear <- f %>% 
  group_by(cat, lab, year) %>% 
  summarise(amount = sum(amount)) 

f_byyear <- inner_join(f_byyear, budget[,c(1,2,4)], by = "cat")

f_byyear <- f_byyear %>% 
  mutate(todate_budget = ann_budget * (month_todate/12))

f_byyear_c_month <- f %>% 
  filter(month <= c_month) %>% 
  group_by(cat, lab, year) %>% 
  summarise(amount = sum(amount)) 

f_byyear_c_month <- inner_join(f_byyear_c_month, budget[,c(1,2,4)], by = "cat")

f_byyear_c_month <- f_byyear_c_month %>% 
  mutate(todate_budget = ann_budget * (month_todate/12))
  
f_balance <- f %>% 
  filter(!cat %in% c("other", "transfer", "loan_repay", "extra_loan_repay", "senate", "canb_house", "new_ext") & account != "cba_hl_canb") %>% 
  mutate(binary = ifelse(amount < 0, "Expenses", "Income"))

f_balance_month <- f_balance %>% 
  group_by(month, binary) %>% 
  summarise(amount = sum(amount)) 

f_balance_month_tot <- f_balance %>% 
  group_by(month) %>% 
  summarise(amount = sum(amount)) 

f_balance_year <- f_balance %>% 
  group_by(binary) %>% 
  summarise(amount = sum(amount)) 

f_balance_year_tot <- f_balance %>% 
  summarise(amount = sum(amount)) 

f_1718 <- f %>% 
  filter(date >= "2017-07-01" & date <= "2018-06-30") %>% 
  group_by(cat, lab) %>% 
  summarise(amount = sum(amount))

# individual categories

g <- f %>% 
  filter(cat == "groceries") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

d <- f %>% 
  filter(cat == "dining") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

h <- f %>% 
  filter(cat == "hif") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

ext <- f %>% 
  filter(cat == "new_ext") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

health_m <-  f %>% 
  filter(cat == "health") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

fuel_m <-  f %>% 
  filter(cat == "fuel") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

hair_m <-  f %>% 
  filter(cat == "hair") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

clothing_m <-  f %>% 
  filter(cat == "clothing") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

digital_m <-  f %>% 
  filter(cat == "digital") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

sports_m <-  f %>% 
  filter(cat == "sports") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

school_m <-  f %>% 
  filter(cat == "school") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

ins_m <-  f %>% 
  filter(cat == "insurance") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

phone_m <-  f %>% 
  filter(cat == "phone") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 






# misc

m_summ <- f %>% 
  filter(cat == "misc") %>% 
  mutate(summ = word(desc, 1, 2)) %>% 
  group_by(summ, lab) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 
  
m <- f %>% 
  filter(cat == "misc") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount) * -1,
            Average = mean(amount) * -1,
            Median = median(amount) * -1,
            Number = length(amount)) 

  
# VISUALISE

f_month <- function(mon) {
  
  max_y <- as.numeric(f_bymonth %>% 
                        ungroup() %>% 
                        filter(month == mon & !cat %in% c("other", "income", "transfer", "loan_repay", "extra_loan_repay", "tax", "senate")) %>% 
                        summarise(min = min(amount)))
  
  f_bymonth %>% 
  filter(month == mon & !cat %in% c("other", "income", "transfer", "loan_repay", "extra_loan_repay", "tax", "senate", "canb_house")) %>% 
  ggplot(aes(x = reorder(lab, amount), y = amount * -1))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = paste(mon), x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_text(aes(label = paste(round(amount * -1,0))), vjust = -1, size=3) +
  ylim(0, max_y * -1 + 500)
}

p_month <- map(unique(f_bymonth$month), f_month)

names(p_month) <- unique(f_bymonth$month)

# year to date

f_plot <- f_byyear_c_month %>% 
  filter(!cat %in% c("other", "transfer", "loan_repay", "extra_loan_repay", "senate", "canb_house", "income", "new_ext") & year == c_year) 

f_plot$rank <- rank(f_plot$amount)

f_plot$x <- f_plot$rank - 0.5

f_plot$xend <- f_plot$rank + 0.5

f_plot_lim_max <- max(f_plot$amount * -1) * 1.2

f_plot_lim <- c(0, f_plot_lim_max)

p_year <- f_plot %>% 
  ggplot(aes(x = reorder(lab, amount), y = amount * -1))  + 
  geom_bar(stat="identity", fill = line_color) + 
  geom_segment(aes(x = x, y = todate_budget * -1, xend = xend, yend = todate_budget * -1), color = "red") +
  theme_mc +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.y = element_blank()) +
  labs(title = "Expenses year to date", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_text(aes(label = paste(round(amount * -1,0))), vjust = -1, size=2.5) +
  ylim(f_plot_lim)

# budget by month

b_mon <- f_cmonth %>% 
  filter(!cat %in% c("other", "income", "transfer", "loan_repay", "extra_loan_repay", "tax", "senate", "bank_charges", "canb_house")) 

b_mon$rank <- rank(b_mon$amount)

b_mon$x <- b_mon$rank - 0.5

b_mon$xend <- b_mon$rank + 0.5

b_mon_lim <- c(0, max(b_mon$amount * -1) * 1.2)

p_b_mon <- b_mon %>% 
  ggplot(aes(x = reorder(lab, amount), y = amount * -1))  + 
  geom_bar(stat="identity", fill = line_color) + 
  geom_segment(aes(x = x, y = mon_budget * -1, xend = xend, yend = mon_budget * -1), color = "red") +
  theme_mc +
  labs(title = c_month_lab, x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_text(aes(label = paste(round(amount * -1,0))), vjust = -1, size=2.5) +
  ylim(b_mon_lim)

# income expenses balance

p_balance_month <- f_balance_month %>% 
  ggplot(aes(x = month, y = abs(amount), fill = binary))  + 
  geom_bar(stat="identity", position = position_dodge()) +
  theme_mc +
  labs(title = "Income and expenses in 2018", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  scale_fill_manual(values = c(Expenses = exp_color, Income = line_color)) +
  theme(legend.position = "bottom", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  theme(axis.text.y = element_blank()) +
  geom_text(aes(label = paste0(round(amount / 1000, 0), "k")), position=position_dodge(width=0.9), vjust=-0.75, size = 3) +
  ylim(0, 20000)

p_exp <- f_balance_month %>% 
  filter(binary == "Expenses", year(month) == year(c_month)) %>% 
  ggplot(aes(x = month, y = amount * -1)) +
  geom_line(color = line_color, size = stroke_size) +
  theme_mc +
  labs(title = "Expenses in 2018", x = "", y = "") +
  geom_text(aes(label = round(amount * -1, 0)), vjust = -1, size = 3) +
  geom_point(color = line_color) +
  ylim(0, 20000)

# Income and expense balances by month
  
# bal_d <- f_balance_month %>% 
  #filter(year(month) == year(c_month) & abs(amount) > 100) %>% 
  # mutate(amount = abs(amount)) 

bal_d <- f_balance_month %>% 
  filter(month <= c_month) %>% 
  tail(26) %>% 
  mutate(amount = abs(amount))

bal_d <- spread(bal_d, key = "binary", value = "amount")

bal_d_c_month <- bal_d %>% 
  filter(month <= c_month) %>% 
  tail(12)

bal_d_c_month[is.na(bal_d_c_month)] <- 0

bal_year <- sum(bal_d_c_month$Income) - sum(bal_d_c_month$Expenses)

p_bal <- bal_d %>% 
  ggplot(aes(x = month)) +
  geom_line(aes(y = Expenses), size = stroke_size, color = "red") +
  geom_line(aes(y = Income), size = stroke_size, color = "blue") +
  geom_ribbon(aes(ymin = Expenses, ymax = Income), fill = "blue", alpha =0.25) +
  theme_mc +
  theme(panel.grid.major = element_blank()) +
  theme(axis.text.y = element_blank()) +
  labs(title = "Income and expenses over past year", x = "", y = "") +
  geom_text(aes(y = Expenses, label = format(round(Expenses, 0), digits = 0, big.mark = ",", scientific = FALSE)), vjust = 2, size = 3) +
  geom_text(aes(y = Income, label = format(round(Income, 0), digits = 0, big.mark = ",", scientific = FALSE)), vjust = -1, size = 3) +
  geom_point(aes(y = Expenses), color = "red") +
  geom_point(aes(y = Income), color = "blue") +
  annotate("text", label = paste0("We have saved $",format(as.numeric(bal_year), digits = 0, big.mark = ",", scientific = FALSE), " over the past year\nor $", format(as.numeric(bal_year / 12), digits = 0, big.mark = ",", scientific = FALSE), " per month"), x = as.Date("2019-06-30"), y = 2500, size = 3) + 
  ylim(0, 25000)


p_balance_year <- f_balance_year %>% 
  ggplot(aes(x = binary, y = abs(amount), fill = binary))  + 
  geom_bar(stat="identity", position = position_dodge()) +
  theme_mc +
  coord_flip() +
  labs(title = "Income and expenses in 2018 year to date", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  scale_fill_manual(values = c(Expenses = exp_color, Income = line_color)) +
  theme(legend.position = "bottom", legend.text = element_text(size=9), legend.background = element_rect(fill = background), legend.key = element_rect(fill = background), legend.title = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  theme(axis.text = element_blank()) +
  theme(axis.line = element_blank()) +
  theme(axis.ticks = element_blank()) +
  geom_text(aes(label=format(abs(amount), digits = 0, big.mark = ",", scientific = FALSE)), position=position_dodge(width=0.9), vjust=0.5, hjust = -0.15, size = 3) +
  annotate("text", label = paste("We have saved\n",format(as.numeric(f_balance_year_tot), digits = 0, big.mark = ",", scientific = FALSE), "this year\nor", format(as.numeric(f_balance_year_tot / month_todate), digits = 0, big.mark = ",", scientific = FALSE), "per month"), x = 1.5, y = 200000) + 
  ylim(0, 220000)

# progress against budget

f_sum <- f %>% 
  group_by(cat, month) %>% 
  arrange(date) %>% 
  mutate(cumsum = cumsum(amount))


f_progress <- function(ca) {

  bud_cat <- abs(as.numeric(budget %>% 
  filter(cat == ca) %>% 
  select(mon_budget)))

labs1 <- f_sum %>% 
  ungroup() %>% 
  filter(cat == ca) %>% 
  select(date, cumsum) %>% 
  tail(1)

labs2 <- tibble(date = as.Date(c_month_end), cumsum = bud_cat * -1)

labs <- bind_rows(labs1, labs2)

f_sum %>% 
  filter(cat == ca & month == c_month) %>% 
  ggplot(aes(x = date, y = cumsum * -1)) +
  geom_line(color = line_color, size = stroke_size) +
  theme_mc +
  theme(plot.title = element_text(size = 10)) +
  labs(title = paste(ca, "spending"), x = "", y = "") +
  geom_segment(x = as.Date(c_month), y = 0, xend = as.Date(c_month_end), yend = bud_cat, colour = "red", linetype = "dashed") +
  geom_text(data = labs, aes(x = date, y = cumsum * -1, label = round(cumsum * -1,0)), vjust = -1, hjust = 0.5, size = 3) + 
  geom_point(data = labs, size = 2) +
  scale_x_date(limits = c(as.Date(c_month), as.Date(c_month_end)), date_labels = "%d-%b") +
  ylim(0, bud_cat * 1.4)
}
  
p_progress <- map(unique(f_sum$cat), f_progress)

names(p_progress) <- unique(f_sum$cat)



# monthly analysis 

f_m <- function(ca) {
  
  by_mon <-  f %>% 
    filter(cat == ca) %>% 
    group_by(cat, lab, month) %>% 
    summarise(Total = sum(amount) * -1,
              Average = mean(amount) * -1,
              Median = median(amount) * -1,
              Number = length(amount)) 
  
  by_mon %>% 
    filter(between(month, tail_month, c_month)) %>%   
    ggplot(aes(x = month, y = Total))  + 
    geom_bar(stat="identity", fill = line_color) + 
    theme_mc +
    labs(title = paste0("Total spend on ", ca), x = "", y = "") +
    theme(panel.grid.major = element_blank()) +
    geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
    theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
    geom_hline(yintercept = mean(by_mon$Total), linetype = "dashed", color = "red") +
    scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") 
  
}

p_m <- map(unique(f$cat), f_m)

names(p_m) <- unique(f$cat)


# groceries analysis


p_g_tot <- g %>% 
filter(between(month, tail_month, c_month)) %>%   
ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on groceries", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_hline(yintercept = mean(g$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 4000)

# annotate("text", label = paste0("Avg spend\n$", round(mean(g$Total), 0)), x = 7, y = mean(g$Total) + 500, size = 2)

p_g_avg <- g %>% 
  ggplot(aes(x = month, y = Average))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Average spend on groceries per shop", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Average,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 60)

p_g_med <- g %>% 
  ggplot(aes(x = month, y = Median))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Median spend on groceries per shop", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Median,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 60)

p_g_num <- g %>% 
  ggplot(aes(x = month, y = Number))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Number of grocery shops by month", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Number,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 60)

# misc analysis

p_m_tot <- m %>% 
  filter(between(month, tail_month, c_month)) %>%
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on miscellaneous items", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_hline(yintercept = mean(g$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 7000)

# annotate("text", label = paste0("Avg spend\n$", round(mean(g$Total), 0)), x = 7, y = mean(g$Total) + 500, size = 2)

p_m_avg <- m %>% 
  ggplot(aes(x = month, y = Average))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Average spend on miscellaneous items per shop", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Average,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") 

p_m_med <-m %>% 
  ggplot(aes(x = month, y = Median))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Median spend on miscellaneous items per shop", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Median,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") 

p_m_num <- m %>% 
  ggplot(aes(x = month, y = Number))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Number of miscellaneous shops by month", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  theme(plot.title = element_text(size = 10)) +
  geom_text(aes(label = paste(round(Number,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y")


p_g_tot <- g %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on groceries", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_hline(yintercept = mean(g$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 5000)

p_d_tot <- d %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on dining", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_hline(yintercept = mean(d$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 1000)

p_h_tot <- h %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on HIF", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  geom_hline(yintercept = mean(h$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 5000)

sum_ext <- sum(ext$Total)

p_ext_tot <- ext %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Total spend on extensions", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(format(round(Total,0), digits = 0, big.mark = ",", scientific = FALSE))), vjust = -1, size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(0, 120000) +
  annotate("text", label = paste0("Our extensions cost $",format(as.numeric(sum_ext), digits = 0, big.mark = ",", scientific = FALSE)), x = as.Date("2019-09-30"), y = 86500, size = 3)  


# SENATE ---- 

s <- f %>% 
  filter(cat == "senate") %>% 
  group_by(cat, lab, month) %>% 
  summarise(Total = sum(amount),
            Average = mean(amount),
            Median = median(amount),
            Number = length(amount)) 


s_cumsum <- f %>% 
  filter(cat == "senate") %>% 
  arrange(date) %>% 
  mutate(cumsum = cumsum(amount)) 

s_balance <- f %>% 
  filter(cat %in% c("senate")) %>% 
  mutate(binary = ifelse(amount < 0, "Expenses", "Income"))

s_balance_month <- s_balance %>% 
  group_by(month, binary) %>% 
  summarise(amount = sum(amount)) 

s_balance_month_tot <- s_balance %>% 
  group_by(month) %>% 
  summarise(amount = sum(amount)) 

s_balance_year <- s_balance %>% 
  group_by(binary) %>% 
  summarise(amount = sum(amount)) 

s_balance_year_tot <- s_balance %>% 
  summarise(amount = sum(amount)) 

p_sen_tot <- s %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Senate expenses", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0)), vjust = ifelse(Total >= 0, -1, 1.5)), size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +

  geom_hline(yintercept = mean(s$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(-6000, 6000)

  
# CASH ---- 

cash <- f %>% 
  filter(account %in% c("cba_sav", "cba_hl") & cat != "extra_loan_repay") %>% 
  group_by(month) %>% 
  summarise(Total = sum(amount),
            Average = mean(amount),
            Median = median(amount),
            Number = length(amount)) 
  

t2 <- f %>%
  group_by(month) %>% 
  summarise(Total = sum(amount),
            Average = mean(amount),
            Median = median(amount),
            Number = length(amount))

p_cash_tot <- cash %>% 
  filter(between(month, tail_month, c_month)) %>%      
  ggplot(aes(x = month, y = Total))  + 
  geom_bar(stat="identity", fill = line_color) + 
  theme_mc +
  labs(title = "Cashflows", x = "", y = "") +
  theme(panel.grid.major = element_blank()) +
  geom_text(aes(label = paste(round(Total,0)), vjust = ifelse(Total >= 0, -1, 1.5)), size=3) +
  theme(axis.text.x = element_text(size = 8, angle = 90, vjust = 0.3, hjust = 1)) +
  
  geom_hline(yintercept = mean(s$Total), linetype = "dashed", color = "red") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
  ylim(-7500, 15000)

# BALANCES ----

balances$date <- as.Date(balances$date, "%d/%m/%Y")

acc <- unique(balances$account)

acc <- sort(acc)

bal_cat <- tibble(account = acc, cat = c("Superannuation", "Cash", "Credit cards", "Real estate", "Credit cards", "Cash", "Home loans", "Home loans", "Cash", "Superannuation", "Superannuation", "Superannuation", "Superannuation", "Superannuation", "Real estate"))

b_recent <- balances %>% 
  group_by(account) %>% 
  slice(which.max(date))

# some calcs to update balances

accounts <- data.frame(id = seq(1: length(unique(b_recent$account))), account = unique(b_recent$account)) 

bal_update <- matrix(nrow = 1, ncol = 3)

for (acc in accounts$account) {
  
  rec_date <- as.Date(b_recent[b_recent$account == acc, ]$date)
  
  rec_amount <- as.numeric(b_recent[b_recent$account == acc, ]$amount)
  
  rec_trans <- as.numeric(f %>% 
                            filter(account == acc & between(date, as.Date(bal_date), rec_date)) %>% 
                            summarise(tot = sum(amount)))
  
  acc_update <- rec_amount - rec_trans
  
  bal_update <- rbind(bal_update, c(as.Date(bal_date), acc, acc_update))
  
  
}

bal_update <- as.data.frame(bal_update)

names(bal_update) <- c("date", "account", "amount")

bal_update <- bal_update[-1, ]

bal_update <- as.tibble(bal_update)

bal_update$date <- as.character(bal_update$date)

bal_update$account <- as.character(bal_update$account)

bal_update$amount <- as.character(bal_update$amount)

bal_update$amount <- as.numeric(bal_update$amount)

bal_update$date <- bal_date

bal_update$date <- as.Date(bal_update$date)

# from imported balances

bal_update <- left_join(bal_update, bal_cat, by = "account")

b_recent <- bal_update %>% 
  group_by(account) %>% 
  slice(which.max(date))

b_cat <- b_recent %>% 
  group_by(cat) %>% 
  summarise(amount = sum(amount))

b_cat$cat <- as.factor(b_cat$cat)

b_cat$id <- c(1, 4, 5, 2, 3)

b_cat$type <- if_else(b_cat$amount > 0, "asset", "liability")

b_cat <- b_cat %>% 
  arrange(id)

b_cat$end <- cumsum(b_cat$amount)

# b_cat$end <- c(head(b_cat$end, -1), 0)

b_cat$start <- c(0, head(b_cat$end, -1))

b_cat <- b_cat[, c(3, 1, 4, 6, 5, 2)]

b_cat_lab <- b_cat %>% 
  select(id, end) %>% 
  rename(x = id,
         y = end)

b_cat_lab <- as.data.frame(b_cat_lab)

b_cat_lr <- tibble(id = 6, cat = "Net worth", type = "asset", start = 0, end = b_cat$end[5], amount = b_cat$end[5])

b_cat <- bind_rows(b_cat, b_cat_lr)

p_nw <- b_cat %>% 
  ggplot() + 
  geom_rect(aes(x = reorder(cat, id), xmin = id - 0.45, xmax = id + 0.45, ymin = end, ymax = start, fill = type)) +
  theme_mc +
  theme(panel.grid.major = element_blank()) +
  labs(title = "Net worth", x = "", y = "") +
  geom_text(data = b_cat, aes(x = id, y = end, label = format(round(amount, 0), digits = 0, big.mark = ",", scientific = FALSE), vjust = ifelse(amount >= 0, -1, 1.5)), size = 3) +
  scale_fill_manual(values = c(asset = "blue", liability = "red"))+
  ylim(0, 2500000)


# TAX ----

c_tax_19 <- "Audible|GITHUB.COM|GOOGLE*GSUITE|SWISH CONNECT|Liberals Whips|MICROSOFT|DROPBOX|UQLNC|Cherish Life|DATACAMP INC.|Interest|GOOGLE*SVCSAPPS|LIBERAL NATIO|Institute of Pub lic Affairs|NATIONBUILDER|TELSTRA|WORLDDIALPOIN"

tax_19 <- f %>% 
  filter(between(date, as.Date("2018-07-01"), as.Date("2019-06-30"))) %>% 
  arrange(date)


tax_19 <- tax_19 %>% 
  mutate(tax = ifelse(str_detect(desc, c_tax_19), 1, tax))

write_csv(tax_19, "data/tax_19.csv")


# TABLES ---- 

# tracking against budget

t_budget <- f_plot %>% 
  ungroup() %>% 
  select(lab, amount, todate_budget) %>% 
  mutate(amount = round(abs(amount),0),
         todate_budget = round(abs(todate_budget),0),
         Balance = todate_budget - amount) %>% 
  arrange(-amount) %>% 
  rename(Category = lab,
         `Actual expenses` = amount,
         `Budgeted expenses` = todate_budget)

l_r_budget <- tibble("Total", sum(t_budget$`Actual expenses`), sum(t_budget$`Budgeted expenses`), sum(t_budget$Balance))

names(l_r_budget) <- names(t_budget)

t_budget <- bind_rows(t_budget, l_r_budget)

t_budget_h <- t_budget %>% 
  mutate(Balance = ifelse(Balance > 0,
    cell_spec(Balance, "html", color = "blue", bold = F),
    cell_spec(Balance, "html", color = "red", bold = T))) %>% 
  kable("html", escape = F, format.args = list(big.mark = ",")) %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = T, font_size = 18) %>% 
  row_spec(length(t_budget$Category), bold = T) 

# tracking against budget in month

t_budget_m <- b_mon %>% 
  ungroup() %>% 
  select(lab, amount, mon_budget) %>% 
  mutate(amount = round(abs(amount),0),
         mon_budget = round(abs(mon_budget),0),
         Balance = mon_budget - amount) %>% 
  arrange(-amount) %>% 
  rename(Category = lab,
         `Actual expenses` = amount,
         `Budgeted expenses` = mon_budget)

l_r_budget_m <- tibble("Total", sum(t_budget_m$`Actual expenses`), sum(t_budget_m$`Budgeted expenses`), sum(t_budget_m$Balance))

names(l_r_budget_m) <- names(t_budget_m)

t_budget_m <- bind_rows(t_budget_m, l_r_budget_m)

t_budget_m_h <- t_budget_m %>% 
  mutate(Balance = ifelse(Balance > 0,
                          cell_spec(Balance, "html", color = "blue", bold = F),
                          cell_spec(Balance, "html", color = "red", bold = T))) %>% 
kable("html", escape = F, format.args = list(big.mark = ",")) %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = T, font_size = 18) %>% 
  row_spec(length(t_budget_m$Category), bold = T) 

# groceries

f_cat <- function(catl) {
  
  bind_rows(f %>% 
  filter(cat == catl & month == c_month) %>% 
  select(date, desc, amount) %>% 
  mutate(date_lab = paste0(day(date),"-", month(date, label = T, abbr = T)),
         amount = abs(amount)) %>% 
  arrange(date) %>% 
  select(date_lab, desc, amount) %>% 
  rename(Date = "date_lab",
         Description = "desc",
         Amount = "amount"), 
  tibble(Date = "Total", Description = "", Amount = abs(sum(f %>% filter(cat == catl & month == c_month) %>% summarise(amount = sum(amount))))))
  
  
}

p_cat <- map(unique(f$cat), f_cat)

names(p_cat) <- unique(f$cat)

f_tab <- function(catl) {
  kable(p_cat[[catl]], "html", caption = str_to_title(catl)) %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = T, font_size = 18) %>% 
    row_spec(length(p_cat[[catl]]$Date), bold = T) %>% 
    row_spec(length(p_cat[[catl]]$Date) - 1, hline_after = T)
}

t_tab <- map(unique(f$cat), f_tab)

names(t_tab) <- unique(f$cat)

t_g <- kable(p_cat$groceries, "html", caption = "Groceries") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$groceries$Date), bold = T) %>% 
  row_spec(length(p_cat$groceries$Date) - 1, hline_after = T)
  
t_m <- kable(p_cat$misc, "html", caption = "Miscellaneous") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$misc$Date), bold = T) %>% 
  row_spec(length(p_cat$misc$Date) - 1, hline_after = T)

t_c <- kable(p_cat$clothing, "html", caption = "Clothing") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$clothing$Date), bold = T) %>% 
  row_spec(length(p_cat$clothing$Date) - 1, hline_after = T)

t_s <- kable(p_cat$sports, "html", caption = "Sports") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$sports$Date), bold = T) %>% 
  row_spec(length(p_cat$sports$Date) - 1, hline_after = T)

t_i <- kable(p_cat$insurance, "html", caption = "Insurance") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$insurance$Date), bold = T) %>% 
  row_spec(length(p_cat$insurance$Date) - 1, hline_after = T)

t_t <- kable(p_cat$travel, "html", caption = "Travel") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$travel$Date), bold = T) %>% 
  row_spec(length(p_cat$travel$Date) - 1, hline_after = T)

t_hif <- kable(p_cat$hif, "html", caption = "HIF") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$hif$Date), bold = T) %>% 
  row_spec(length(p_cat$hif$Date) - 1, hline_after = T)

t_d <- kable(p_cat$dining, "html", caption = "Dining") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(p_cat$dining$Date), bold = T) %>% 
  row_spec(length(p_cat$dining$Date) - 1, hline_after = T)



# misc

m_m <- f %>% 
  filter(cat == "misc" & month == c_month) %>% 
  select(date, desc, amount) %>% 
  mutate(date_lab = paste0(day(date),"-", month(date, label = T, abbr = T)),
         amount = abs(amount)) %>% 
  arrange(date) %>% 
  select(date_lab, desc, amount) %>% 
  rename(Date = "date_lab",
         Description = "desc",
         Amount = "amount")

l_row_m <- tibble(Date = "Total", Description = "", Amount = abs(sum(f %>% filter(cat == "misc" & month == c_month) %>% select(amount))))

m_m <- bind_rows(m_m, l_row_m)

t_m <- kable(m_m, "html") %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = FALSE, font_size = 14) %>% 
  row_spec(length(m_m$Date), bold = T) %>% 
  row_spec(length(m_m$Date) - 1, hline_after = T)


senate <- f %>% 
  filter(cat == "senate")

write_csv(senate, "senate.csv")




