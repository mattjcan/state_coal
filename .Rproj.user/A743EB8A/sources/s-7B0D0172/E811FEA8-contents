# PREAMABLE ----

library("XML")
library("plyr")
library("ggplot2")
library("gridExtra")
library("reshape2") # data manipulation package
library("zoo") # date manipulation package
library("dplyr")
library("slidify")
library(rgdal)    # for readOGR and others
library(sp)       # for spatial objects
library(leaflet)  # for interactive maps (NOT leafletR here)
library(maps)
library(htmltools)
library(ggmap)
library(rgeos)
library(magrittr)
library(knitr)
library(xaringan)
library(rmarkdown)
library(tidyverse)
library(widgetframe)
library(kableExtra)

register_google(key = "AIzaSyA0Fqq1J4tHHU8vAlynddT8dcoaGK9VGzw")

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\00. Archive\\Data")

# IMPORT QLD DATA ---- 

# Import 2017 data --------

xf <- xmlTreeParse('qld.xml', useInternalNodes = TRUE)

xt <- xmlRoot(xf)

district <- xpathSApply(xf, "//districts/district", xmlGetAttr, 'name')

count <- xpathSApply(xf, "//districts/district/candidates", xmlGetAttr, 'count')

dl <- rep(district, count)

c1 <- xmlToDataFrame(nodes=getNodeSet(xf,"//candidates/candidate"))[,1:2]

c2 <- xmlToDataFrame(nodes=getNodeSet(xf,"//candidates/candidate/primaryVotes"))

c3 <- xpathSApply(xf, "//districts/district/candidates/candidate", xmlGetAttr, 'party')

t <- cbind(xmlToDataFrame(nodes=getNodeSet(xf,"//candidates/candidate"))[,1:2],xmlToDataFrame(nodes=getNodeSet(xf,"//candidates/candidate/primaryVotes")), party = xpathSApply(xf, "//districts/district/candidates/candidate", xmlGetAttr, 'party'), Electorate = rep(district, count))

t <- cbind( c1,  c2 , party = c3 , div17 = rep(district, count))

t$count <- as.numeric((as.character(t$count)))

t$percentage <- as.numeric((as.character(t$percentage)))

names(t)[6] <- "div17"

concord <- read.csv("concord_div.csv", sep = ",", header = TRUE, skip = 0)

names(concord) <- c("d15", "d17")

reg <- read.csv("reg.csv", sep = ",", header = TRUE, skip = 0)

n <- read.csv("n.csv", sep = ",", header = TRUE, skip = 0)

tpp17 <- read.csv("tpp17.csv", sep = ",", header = TRUE, skip = 0,  colClasses="character")

tpp17$Votes <- as.numeric(gsub(",", "", tpp17$Votes))

n1 <- xpathSApply(xf, "//booths/booth/name", xmlGetAttr, 'name')

d1 <- xmlToDataFrame(nodes=getNodeSet(xf,"//booths/booth/boothCandidates/boothCandidate/primaryVotes"))

d2 <- xmlToDataFrame(nodes=getNodeSet(xf,"//booths/booth/formalVotes"))

d3 <- xmlToDataFrame(nodes=getNodeSet(xf,"//booths/booth@name"))


c2 <- xmlToDataFrame(xf, colClasses = list("formalVotes", "name"))


c4 <- xmlToDataFrame(nodes = xmlChildren(xmlRoot(xf)[["formaVotes"]]))


c3 <- xpathSApply(xf, "//districts/district/candidates/candidate", xmlGetAttr, 'party')

## Import 2015 data --------

xf15 <- xmlTreeParse('qld2015.xml', useInternalNodes = TRUE)

xt15 <- xmlRoot(xf15)

district15 <- xpathSApply(xf15, "//districts/district", xmlGetAttr, 'name')

count15 <- xpathSApply(xf15, "//districts/district/candidates", xmlGetAttr, 'count')

dl <- rep(district15, count15)

c115 <- xmlToDataFrame(nodes=getNodeSet(xf15,"//candidates/candidate"))[,1:2]

c215 <- xmlToDataFrame(nodes=getNodeSet(xf15,"//candidates/candidate/primaryVotes"))

c315 <- xpathSApply(xf15, "//districts/district/candidates/candidate", xmlGetAttr, 'party')

t15 <- cbind( c115,  c215 , party = c315 , division = rep(district15, count15))

t15$count <- as.numeric((as.character(t15$count)))

t15$percentage <- as.numeric((as.character(t15$percentage)))

tpp15 <- read.csv("tpp15.csv", sep = ",", header = TRUE, skip = 0,  colClasses="character")

tpp15$Votes <- as.numeric(gsub(",", "", tpp15$Votes))

# Import 2017 Polling Booth Data

z1 <- xpathSApply(xt, "//districts/district/booths/booth/boothCandidates/boothCandidate", xmlGetAttr, "ballotOrderNumber")

z2 <- xpathSApply(xt, "//districts/district/booths/booth/boothCandidates/boothCandidate/primaryVotes", xmlValue)

z3 <- xpathSApply(xt, "//districts/district/booths/booth", xmlGetAttr, "name")

z4 <- xpathSApply(xt, "//districts/district/booths", xmlGetAttr, "boothsInCount")

z5 <- xpathSApply(xf, "//districts/district", xmlGetAttr, 'name')

z6 <- rep(z5, z4)

z7 <- cbind(z3,z6)

z8 <- xpathSApply(xf, "//districts/district/candidates", xmlGetAttr, 'count')

z9 <- rep(z8,z4)

z10 <- rep(z7[,1],z9)

z11 <- rep(z7[,2],z9)

z12 <- data.frame(ballotOrderNumber = z1, votes17 = z2, PB = z10, div = z11)

z13 <- xmlToDataFrame(nodes=getNodeSet(xf,"//candidates/candidate"))[,1:2]

z14 <- xpathSApply(xf, "//districts/district/candidates/candidate", xmlGetAttr, 'party')

z15 <- xpathSApply(xf, "//districts/district/candidates/candidate", xmlGetAttr, 'ballotOrderNumber')

z16 <- data.frame(ballotOrderNumber = z15, z13, party = z14, div = rep(z5, z8))

pb17 <- left_join(z12,z16,by=c("ballotOrderNumber", "div"))

pb17 <- read.csv("pb17_fedpb.csv", sep = ",", header = TRUE, skip = 0)

pb17 <- pb17[,2:11]

# TIDY STATE DATA ----

# PRIMARY VOTES ----

# Primary votes by party ---------

p17 <- ddply(t, .(party), summarise, Votes = sum(count))

p17$prop <- round(p17$Votes / sum(p17$Votes) * 100,2)

p15 <- ddply(t15, .(party), summarise, Votes = sum(count))

p15$prop <- round(p15$Votes / sum(p15$Votes) * 100,2)

p17$Votes15 <- p15$Votes[match(p17$party, p15$party)]

p17$prop15 <- p15$prop[match(p17$party, p15$party)]

p17$swing <- p17$prop - p17$prop15

levels(p17$party)[levels(p17$party) == "ZZZ"] <- "OTH"

p17$labels <- c("Labor", "CR", "Greens", "KAP", "LNP", "One Nation", "Other")

# Primary votes by division ---------

t15$div17 <- concord$d17[match(t15$division, concord$d15)]

pd.1 <- left_join(t,t15,by=c("party", "div17"))

pd.2 <- pd.1[,c("surname.x", "givenNames.x", "percentage.x", "count.x", "party", "div17", "percentage.y", "count.y")]

names(pd.2) <- c("surname", "givenName", "prop17", "votes17", "party", "division", "prop15", "votes15")

pd.2[is.na(pd.2)] <- 0

pd.2$swing <- pd.2$prop17 - pd.2$prop15

pd.2$division <- as.factor(pd.2$division)

pd.2$reg <- reg$region[match(pd.2$division, reg$division)]

pd.2$n <- n$loc[match(pd.2$reg, n$region)]

pd <- pd.2

# Primary votes by region ---------

pd.lnp <- pd[pd$party == "LNP", ]

reg.lnp <- ddply(pd.lnp, .(reg), summarise, votes17 = sum(votes17), votes15 = sum(votes15))

t$reg <- reg$region[match(t$div17, reg$division)]

t15$reg <- reg$region[match(t15$div17, reg$division)]

reg.sum17 <- ddply(t, .(reg), summarise, tot17 = sum(count))

reg.sum15 <- ddply(t15, .(reg), summarise, tot15 = sum(count))

reg.sum15 <- reg.sum15[1:12, ]

reg.lnp$tot17 <- reg.sum17$tot17

reg.lnp$tot15 <- reg.sum15$tot15

reg.lnp$prop17 <- reg.lnp$votes17 / reg.lnp$tot17

reg.lnp$prop15 <- reg.lnp$votes15 / reg.lnp$tot15

reg.lnp$swing <- reg.lnp$prop17 - reg.lnp$prop15

reg.lnp$labels <- c("Capricornia", "CQ", "FNQ", "Gold \n Coast", "Metro \n North", "Metro \n South", "Metro \n West", "NQ", "Sunshine \n Coast", "Southwest \n QLD", "Wide \n Bay", "West \n Moreton")

reg.lnp$loc <- c("r", "r", "r", "u", "u", "u", "u", "r", "u", "r", "r", "u")

# Primary votes by location ---------

loc.lnp <- ddply(reg.lnp, .(loc), summarise, votes17 = sum(votes17), votes15 = sum(votes15))

loc.sum <- ddply(reg.lnp, .(loc), summarise, tot17 = sum(tot17), tot15= sum(tot15))

loc.lnp$tot17 <- loc.sum$tot17

loc.lnp$tot15 <- loc.sum$tot15

loc.lnp$prop17 <- loc.lnp$votes17 / loc.lnp$tot17

loc.lnp$prop15 <- loc.lnp$votes15 / loc.lnp$tot15

loc.lnp$swing <- loc.lnp$prop17 - loc.lnp$prop15

loc.lnp$labels <- c("Regional", "SEQ")

#TPP VOTES ----

# TPP votes by party ---------

tpp17.party <- ddply(tpp17, .(Party), summarise, Votes = sum(Votes))

tpp17.party <- tpp17.party[tpp17.party$Party %in% c("ALP", "LNP"),]

tpp17.party$prop <- round(tpp17.party$Votes / sum(tpp17.party$Votes) * 100,2)

tpp15.party <- ddply(tpp15, .(Party), summarise, Votes = sum(Votes))

tpp15.party <- tpp15.party[tpp15.party$Party %in% c("ALP", "LNP"),]

tpp15.party$prop <- round(tpp15.party$Votes / sum(tpp15.party$Votes) * 100,2)

tpp17.party$prop15 <- tpp15.party$prop

tpp17.party$swing <- tpp17.party$prop - tpp17.party$prop15

# TPP votes by division ---------

tpp15$div17 <- concord$d17[match(tpp15$Division, concord$d15)]

tpp15$div17 <- as.character(tpp15$div17)

names(tpp17)[1] <- "div17"

tpp.d.1 <- left_join(tpp17,tpp15,by=c("Party", "div17"))

tpp.d.2 <- tpp.d.1[,c("div17", "Party", "Votes.x", "Prop.x", "Votes.y", "Prop.y")]

names(tpp.d.2) <- c("div17", "party", "votes17", "prop17", "votes15", "prop15")

tpp.d.2[is.na(tpp.d.2)] <- 0

tpp.d.2$prop17 <- as.numeric(tpp.d.2$prop17)

tpp.d.2$prop15 <- as.numeric(tpp.d.2$prop15)

tpp.d.2$swing <- tpp.d.2$prop17 - tpp.d.2$prop15

tpp.d.2$div17 <- as.factor(tpp.d.2$div17)

tpp.d.2$reg <- reg$region[match(tpp.d.2$div17, reg$division)]

tpp.d.2$n <- n$loc[match(tpp.d.2$reg, n$region)]

tpp.d <- tpp.d.2[tpp.d.2$prop15 != 0,]

# TPP votes by region ---------

tpp.d.lnp <- tpp.d.2[tpp.d.2$party == "LNP", ]

reg.tpp.lnp <- ddply(tpp.d.lnp, .(reg), summarise, votes17 = sum(votes17))

reg.tpp.sum <- tpp.d.2[tpp.d.2$div17 %in% tpp.d.lnp$div17, ]

reg.tpp.sum.1 <- ddply(reg.tpp.sum, .(reg), summarise, tot17 = sum(votes17))

reg.tpp.lnp$tot17 <- reg.tpp.sum.1$tot17

reg.tpp.lnp$prop17 <- reg.tpp.lnp$votes17 / reg.tpp.lnp$tot17

tpp15$reg <- reg$region[match(tpp15$div17, reg$division)]

tpp15.1 <- tpp15[tpp15$reg != "NA", ]

tpp15.lnp <- tpp15.1[tpp15.1$Party == "LNP", ]

reg.tpp.lnp15 <- ddply(tpp15.lnp, .(reg), summarise, votes15 = sum(Votes))

reg.tpp.lnp15 <- reg.tpp.lnp15[1:12,]

reg.tpp15.sum <- tpp15.1[tpp15.1$Division %in% tpp15.lnp$Division, ]

reg.tpp15.sum.1 <- ddply(reg.tpp15.sum, .(reg), summarise, tot15 = sum(Votes))

reg.tpp15.sum.1 <- reg.tpp15.sum.1[1:12, ] 

reg.tpp.lnp$votes15 <- reg.tpp.lnp15$votes15[match(reg.tpp.lnp$reg, reg.tpp.lnp15$reg)]

reg.tpp.lnp$tot15 <- reg.tpp15.sum.1$tot15[match(reg.tpp.lnp$reg, reg.tpp15.sum.1$reg)]

reg.tpp.lnp$prop15 <- reg.tpp.lnp$votes15 / reg.tpp.lnp$tot15

reg.tpp.lnp$swing <- reg.tpp.lnp$prop17 - reg.tpp.lnp$prop15

reg.tpp.lnp$labels <- c("CQ", "FNQ", "Gold \n Coast", "Metro \n North", "Metro \n South", "Metro \n West", "NQ", "Sunshine \n Coast", "Southwest \n QLD", "Wide \n Bay", "West \n Moreton")

reg.tpp.lnp$loc <- c( "r", "r", "u", "u", "u", "u", "r", "u", "r", "r", "u")

# TPP votes by location ---------

loc.tpp.lnp <- ddply(reg.tpp.lnp, .(loc), summarise, votes17 = sum(votes17), votes15 = sum(votes15))

loc.tpp.sum <- ddply(reg.tpp.lnp, .(loc), summarise, tot17 = sum(tot17), tot15= sum(tot15))

loc.tpp.lnp$tot17 <- loc.tpp.sum$tot17

loc.tpp.lnp$tot15 <- loc.tpp.sum$tot15

loc.tpp.lnp$prop17 <- loc.tpp.lnp$votes17 / loc.tpp.lnp$tot17

loc.tpp.lnp$prop15 <- loc.tpp.lnp$votes15 / loc.tpp.lnp$tot15

loc.tpp.lnp$swing <- loc.tpp.lnp$prop17 - loc.tpp.lnp$prop15

loc.tpp.lnp$labels <- c("Regional", "SEQ")

# Polling booth data Capricornia ---------

t_pb17 <- ddply(pb17, .(PB, fed_div, lat, lon), summarize, votes17 = sum(votes17))

l_pb17 <- pb17[pb17$party == "LNP", ]

l_pb17 <- ddply(l_pb17, .(PB, fed_div, lat, lon), summarize, votes17 = sum(votes17))

l_pb17$pvotes17 <- l_pb17$votes17 / t_pb17$votes17

pb17.cap <- l_pb17[l_pb17$fed_div == "Capricornia", ]

colnames(pb17.cap) <- c("PollingPlace", "div_f", "lat_s", "lon_s", "votes17_s", "pvotes17_s") 

t.pb.c <- pb17[pb17$fed_div == "Capricornia", ]

t.pb.c <- ddply(t.pb.c, .(PB, party, lat, lon), summarize, v17 = sum(votes17))

t.pb.c <- ddply(t.pb.c, .(PB), transform, p17 = v17 / sum(v17))

colnames(t.pb.c) <- c("pp", "party", "lat", "lon", "v17", "p17")

c_long <- melt(t.pb.c, id.vars = c("pp", "party", "lat", "lon"), measure.vars = c("v17", "p17"))

c_wide <- dcast(c_long, pp + lat + lon + variable ~ party)

cp <- c_wide[c_wide$variable == "p17", ]

cp[is.na(cp$ZZZ),]$ZZZ <- 0

grn <- 0.25 

onp <- 0.7

zzz <- 0.3 # assumed preference flows from Margaret Strelow = Strelow flow to ONP (40%) * ONP flow to LNP (70%)

cp$tpp <- cp$LNP + cp$GRN * grn + cp$ONP * onp + cp$ZZZ * zzz

# PLOTS FOR STATE ANALYSIS ---------

plot.lnp.s.cap <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "Cap",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Capricornia") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, -0.2, 0.5), vjust = 1.5), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10) + theme(axis.text.x = element_text(size = 5, angle = 0))# + geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "Cap",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "Cap",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "Cap",]$swing) + 1, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "Cap",]$swing) + 0.1, size=3, fontface = "plain")

plot.lnp.s.cq <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "CQ",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Central Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, -0.2, 0.5), vjust = 1.5), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10) + theme(axis.text.x = element_text(size = 5, angle = 0))# + geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "CQ",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "CQ",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "CQ",]$swing) + 1, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "CQ",]$swing) + 0.1, size=3, fontface = "plain")

plot.lnp.s.fnq <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "FNQ",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Far North Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, -0.2, 0.5), vjust = 1.5), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10) + theme(axis.text.x = element_text(size = 5, angle = 0))# + geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "FNQ",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "FNQ",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "FNQ",]$swing) + 1, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "FNQ",]$swing) + 0.1, size=3, fontface = "plain")

plot.lnp.s.gc <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "GC",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Gold Coast") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0))# + geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "GC",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "GC",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "GC",]$swing) - 1, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "GC",]$swing) - 0.7, size=3, fontface = "plain")

plot.lnp.s.mn <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro North") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

plot.lnp.s.ms <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MS",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro South") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MS",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MS",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MS",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MS",]$swing) - 0.8, size=3, fontface = "plain")

plot.lnp.s.mw <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MW",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro West") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0))# + geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MW",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MW",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MW",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MW",]$swing) - 0.8, size=3, fontface = "plain")

plot.lnp.s.wm <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WM",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="West Moreton") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WM",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WM",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WM",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WM",]$swing) - 0.4, size=3, fontface = "plain")

plot.lnp.s.nq <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "NQ",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="North Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "NQ",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "NQ",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "NQ",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "NQ",]$swing) - 0.4, size=3, fontface = "plain")

plot.lnp.s.sc <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SC",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Sunshine Coast") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + theme(axis.text.x = element_text(size = 5, angle = 0)) + ylim(-25,10) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SC",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SC",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SC",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SC",]$swing) - 0.5, size=3, fontface = "plain")

plot.lnp.s.swq <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SWQ",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="South West Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + theme(axis.text.x = element_text(size = 5, angle = 0)) + ylim(-25,10) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SWQ",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SWQ",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SWQ",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "SWQ",]$swing) - 0.1, size=3, fontface = "plain")

plot.lnp.s.wb <- ggplot(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WB",], aes(x = reorder(division, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Wide Bay") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + theme(axis.text.x = element_text(size = 5, angle = 0)) + ylim(-25,10) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WB",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WB",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WB",]$swing) - 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "WB",]$swing) - 0.2, size=3, fontface = "plain")

plot.lnp.reg <- ggplot(reg.lnp, aes(x = reorder(labels, swing), y = swing,  fill = loc))  + scale_fill_manual(values = c("yellow", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="") + geom_text(aes(label = paste(round(swing*100,1),"%"), vjust=1.5), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank()) + geom_hline(yintercept = mean(reg.lnp$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(reg.lnp$swing),3)*100,"%"), y = mean(reg.lnp$swing) - 0.003, x = length(reg.lnp$swing) - 1, size=3, fontface = "plain") +ylim(-0.15,0)

p.tpp.lnp.reg <- ggplot(reg.tpp.lnp, aes(x = reorder(labels, swing), y = swing,  fill = loc))  + scale_fill_manual(values = c("yellow", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="") + geom_text(aes(label = paste(round(swing*100,1),"%"), vjust = ifelse(swing >= 0, -0.5, 1.5)), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank()) + geom_hline(yintercept = mean(reg.tpp.lnp$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(reg.tpp.lnp$swing),3)*100,"%"), y = mean(reg.tpp.lnp$swing) + 0.006, x = length(reg.tpp.lnp$swing) - 9, size=3, fontface = "plain") +ylim(-0.1,0.1)

plot.lnp.loc <- ggplot(loc.lnp, aes(x = reorder(labels, swing), y = swing,  fill = loc))  + scale_fill_manual(values = c("yellow", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="") + geom_text(aes(label = paste(round(swing*100,1),"%"), vjust=1.5), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank()) + geom_hline(yintercept = mean(loc.lnp$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(loc.lnp$swing),3)*100,"%"), y = mean(loc.lnp$swing) - 0.003, x = length(loc.lnp$swing) + 0.3, size=3, fontface = "plain") +ylim(-0.15,0)

p.tpp.lnp.loc <- ggplot(loc.tpp.lnp, aes(x = reorder(labels, swing), y = swing,  fill = loc))  + scale_fill_manual(values = c("yellow", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="") + geom_text(aes(label = paste(round(swing*100,1),"%"), vjust = ifelse(swing >= 0, -0.5, 1.5)), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank()) #+ geom_hline(yintercept = mean(loc.tpp.lnp$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(loc.tpp.lnp$swing),3)*100,"%"), y = mean(loc.tpp.lnp$swing) + 0.006, x = length(loc.tpp.lnp$swing) - 0, size=3, fontface = "plain") +ylim(-0.1,0.1)

plot.party <- ggplot(p17[p17$party != "CR",], aes(x = reorder(labels, -prop), y = prop,  fill = labels))  + scale_fill_manual(values = c("green", "pink", "red", "blue", "orange", "grey"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="") + geom_text(aes(label = paste(round(prop,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())  + ylim(0,40)

plot.party.s <- ggplot(p17[p17$party != "CR",], aes(x = reorder(labels, -swing), y = swing,  fill = labels))  + scale_fill_manual(values = c("green", "pink", "red", "blue", "orange", "grey"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Swing") + geom_text(aes(label = paste(round(swing,1),"%"), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank()) + ylim(-10,15)

p.party.tpp <- ggplot(tpp17.party, aes(x = reorder(Party, -prop), y = prop,  fill = Party))  + scale_fill_manual(values = c("red", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Two party preferred") + geom_text(aes(label = paste(round(prop,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())  #+ ylim(0,40)

p.party.tpp.s <- ggplot(tpp17.party, aes(x = reorder(Party, -swing), y = swing,  fill = Party))  + scale_fill_manual(values = c("red", "blue"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Two party preferred swing") + geom_text(aes(label = paste(round(swing,1),"%"), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())  + ylim(-3,3)

p.lnp.tpp.s.cq <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "CQ",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Central Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.fnq <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "FNQ",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Far North Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.gc <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "GC",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Gold Coast") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,15)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.mn <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "MN",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro North") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.ms <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "MS",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro South") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.mw <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "MW",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Metro West") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.nq <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "NQ",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="North Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-20,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.sc <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "SC",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Sunshine Coast") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-25,25)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.swq <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "SWQ",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Soutwest Queensland") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.wb <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "WB",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Wide Bay") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")

p.lnp.tpp.s.wm <- ggplot(tpp.d.lnp[tpp.d.lnp$prop15 != 0 & tpp.d.lnp$reg == "WM",], aes(x = reorder(div17, swing), y = swing,  fill = n)) + scale_fill_manual(values = c("blue"))  + geom_bar(stat="identity") +  theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="West Moreton") + geom_text(aes(label = round(swing,1), hjust = ifelse(swing >= 0, .5, 0.5), vjust = ifelse(swing >= 0, -1, 1.5)), size=3)  + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black")) + ylim(-10,10)+ theme(axis.text.x = element_text(size = 5, angle = 0)) #+ geom_hline(yintercept = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing), color="red") + geom_text(label = paste("Average swing = ",round(mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing),1),"%"), y = mean(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) + 1.3, x = length(pd.lnp[pd.lnp$prop15 != 0 & pd.lnp$reg == "MN",]$swing) - 0.8, size=3, fontface = "plain")


# OUTPUT FOR STATE PLOTS ---------


setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\00. Archive\\Data")   

png("Slides/qld_2017/images/party.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.party, plot.party.s, ncol=1)
dev.off()  

png("Slides/qld_2017/images/party_tpp.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.party.tpp, p.party.tpp.s, ncol=2)
dev.off()  

png("Slides/qld_2017/images/reg.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.lnp.reg, ncol=1)
dev.off()             

png("Slides/qld_2017/images/p_div_1.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.lnp.s.mn, plot.lnp.s.ms, plot.lnp.s.mw, plot.lnp.s.wm, ncol=2)
dev.off() 

png("Slides/qld_2017/images/p_div_2.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.lnp.s.gc, plot.lnp.s.sc, plot.lnp.s.wb, plot.lnp.s.swq, ncol=2)
dev.off() 

png("Slides/qld_2017/images/p_div_3.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.lnp.s.fnq, plot.lnp.s.nq, plot.lnp.s.cq, plot.lnp.s.cap, ncol=2)
dev.off() 

png("Slides/qld_2017/images/p_loc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(plot.lnp.loc, ncol=1)
dev.off() 

png("Slides/qld_2017/images/tpp_div_1.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.lnp.tpp.s.mn, p.lnp.tpp.s.ms, p.lnp.tpp.s.mw, p.lnp.tpp.s.wm, ncol=2)
dev.off() 

png("Slides/qld_2017/images/tpp_div_2.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.lnp.tpp.s.gc, p.lnp.tpp.s.sc, p.lnp.tpp.s.wb, p.lnp.tpp.s.swq, ncol=2)
dev.off() 

png("Slides/qld_2017/images/tpp_div_3.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.lnp.tpp.s.fnq, p.lnp.tpp.s.nq, p.lnp.tpp.s.cq, ncol=2)
dev.off() 

png("Slides/qld_2017/images/reg_tpp.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.tpp.lnp.reg, ncol=1)
dev.off()             

png("Slides/qld_2017/images/p_loc_tpp.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.tpp.lnp.loc, ncol=1)
dev.off() 

# SLIDIFY FOR STATE

# setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data\\Slides\\qld_2017") 

# slidify("index.Rmd")

# setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data")

# FEDERAL DATA ----

## Import Federal Capricornia polling booths ----

d1 <- read.csv("fed_pb.csv", stringsAsFactors = FALSE)

d1$Street.address[3] <- "Armstrong Beach Rd, ARMSTRONG BEACH QLD 4737"        
d1$Street.address[5] <- "212 Quay Street, ROCKHAMPTON CITY QLD 4700"  
d1$Street.address[15] <- "212 Quay Street, ROCKHAMPTON CITY QLD 4700"
d1$Street.address[18] <- "362 Yaamba Rd, NORMAN GARDENS QLD 4701"           
d1$Street.address[19] <- "Hill St, EMU PARK QLD 4710"                     
d1$Street.address[24] <- "225-237 Frenchville Rd, FRENCHVILLE QLD 4701"
d1$Street.address[32] <- "Gregory St, MACKAY QLD 4740"
d1$Street.address[36] <- "Maud St, MIRANI QLD 4753"                         
d1$Street.address[38] <- "Batchelor Pde, MORANBAH QLD 4744"           
d1$Street.address[41] <- "650 Norman Rd, NORMAN GARDENS QLD 4701"            
d1$Street.address[52] <- "2 Broad St, SARINA QLD 4737"                         
d1$Street.address[58] <- "Swayneville State School, 952 Marlborough-Sarina Rd, SARINA QLD 4737"  
d1$Street.address[63] <- "30 Rawlings St, YEPPOON QLD 4703"             
d1$Street.address[64] <- "30 Rawlings St, YEPPOON QLD 4703"             
d1$Street.address[65] <- "139 Adelaide Park Rd, YEPPOON QLD 4703"  

d2 <- geocode(d1$Street.address)

d1 <- data.frame(d1, d2)

d1$PollingPlace <- d1$Polling.place 

## Import federal primary votes ======

qld_pb <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-20499-QLD.csv", stringsAsFactors = FALSE, skip = 1)

qld_pb <- ddply(qld_pb, .(PollingPlace), transform, pvotes17 = OrdinaryVotes / sum(OrdinaryVotes))

qld_pb <- qld_pb[ , c("DivisionNm", "PollingPlaceID", "PollingPlace", "PartyAb", "OrdinaryVotes", "Swing", "pvotes17")]

qld_pb[qld_pb$PartyAb == "", ]$PartyAb <- "IND"

cap_pb <- qld_pb[qld_pb$DivisionNm == "Capricornia" & qld_pb$PartyAb == "LNP", ]

d3 <- join(d1, cap_pb, "PollingPlace") 

cap_pb <- d3[, 3:length(colnames(d3))]

cap_pb <- data.frame(cap_pb$PollingPlace, cap_pb$DivisionNm, cap_pb$PartyAb, cap_pb$lon, cap_pb$lat, cap_pb$OrdinaryVotes, cap_pb$pvotes17, cap_pb$Swing)

colnames(cap_pb) <- c("PollingPlace", "div_f", "party", "lon_f", "lat_f", "votes16_f", "pvotes16_f", "swing16_f")

## State / Federal data spatial data frames ======

pb17_sp <- pb17.cap

pb16_sp <- cap_pb

pb16_sp <- pb16_sp[!is.na(pb16_sp$lon_f), ]

pb16_sp <- pb16_sp[pb16_sp$votes16_f != 0, ]

coordinates(pb17_sp) <- ~lon_s + lat_s

coordinates(pb16_sp) <- ~lon_f + lat_f

pb17_sp$index <- apply(gDistance(pb17_sp, pb16_sp, byid=TRUE), 2, which.min)

pb16_sp$index <- 1:length(pb16_sp$PollingPlace)

pb17_sp@data <- join(pb17_sp@data, pb16_sp@data, "index")

pb17_sp$swing_s <- pb17_sp$pvotes17_s - pb17_sp$pvotes16_f

# Import shapefiles ----

fed_elec <- readOGR("QLD_ELB_031209_region.shp")

cap_elec <- fed_elec[fed_elec$ELECT_DIV == "Capricornia", ]

sa1 <- readOGR("SA1_2016_AUST.shp")

#PRIMARY VOTES ----

# 2016 primary results by party ----

qld_s <- ddply(qld_pb, .(DivisionNm, PartyAb), summarise, v16 = sum(OrdinaryVotes))

cap16 <- qld_s[qld_s$DivisionNm == "Capricornia", ]

cap16$p16 <- round(cap16$v16 / sum(cap16$v16) * 100, 2)

colnames(cap16) <- c("div", "party", "v16", "p16")

cap16 <- cap16[ , 2:4]

# 2013 primary results by party ----

prim13 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-17496-QLD.csv", stringsAsFactors = FALSE, skip = 1)

prim13 <- ddply(prim13, .(DivisionNm, PartyAb), summarise, v13 = sum(OrdinaryVotes))

prim13[prim13$PartyAb == "", ]$PartyAb <- "IND"

cap13 <- prim13[prim13$DivisionNm == "Capricornia", ]

colnames(cap13) <- c("div", "party", "v13")

cap13 <- cap13[ , 2:3]

cap13 <- rbind(cap13[cap13$party %in% c("ALP", "FFP", "GRN", "KAP", "LNP", "PUP"), ], c("OTH", sum(cap13[!(cap13$party %in% c("ALP", "FFP", "GRN", "KAP", "LNP", "PUP")), ]$v13)))

cap13$v13 <- as.numeric(cap13$v13)

cap13$p13 <- round(cap13$v13 / sum(cap13$v13) * 100, 2)

# 2010 primary results by party ----

prim10 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-15508-QLD.csv", stringsAsFactors = FALSE, skip = 1)

prim10 <- ddply(prim10, .(DivisionNm, PartyAb), summarise, v10 = sum(OrdinaryVotes))

prim10[prim10$PartyAb == "", ]$PartyAb <- "IND"

cap10 <- prim10[prim10$DivisionNm == "Capricornia", ]

colnames(cap10) <- c("div", "party", "v10")

cap10 <- cap10[ , 2:3]

cap10 <- rbind(cap10[cap10$party %in% c("ALP", "FFP", "GRN", "LNQ"), ], c("OTH", sum(cap10[!(cap10$party %in% c("ALP", "FFP", "GRN", "LNQ")), ]$v10)))

cap10$v10 <- as.numeric(cap10$v10)

cap10$p10 <- round(cap10$v10 / sum(cap10$v10) * 100, 2)

# 2007 primary results by party ----

prim07 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-13745-QLD.csv", stringsAsFactors = FALSE, skip = 1)

prim07 <- ddply(prim07, .(DivisionNm, PartyAb), summarise, v07 = sum(OrdinaryVotes))

prim07[prim07$PartyAb == "", ]$PartyAb <- "IND"

cap07 <- prim07[prim07$DivisionNm == "Capricornia", ]

colnames(cap07) <- c("div", "party", "v07")

cap07 <- cap07[ , 2:3]

cap07 <- rbind(
  cap07[cap07$party %in% c("ALP", "FFP", "GRN"), ], 
  c("LNP", sum(cap07[cap07$party %in% c("LP", "NP"), ]$v07)),
  c("OTH", sum(cap07[!(cap07$party %in% c("ALP", "FFP", "GRN", "LP", "NP")), ]$v07)))

cap07$v07 <- as.numeric(cap07$v07)

cap07$p07 <- round(cap07$v07 / sum(cap07$v07) * 100, 2)

# State primary results in Capricornia ---- 

pd_cap <- pd[pd$division %in% c("Rockhampton", "Keppel", "Mirani", "Burdekin"), ]

pd_cap[pd_cap$party == "ZZZ",]$party <- "OTH"

pd_cap <- join(pd_cap, plab, "party")

pd_cap$lab <- as.character(pd_cap$lab)

pd_cap[pd_cap$surname == "Strelow", ]$lab <- "Strelow"

pd_r <- ggplot(pd_cap[pd_cap$division == "Rockhampton", ], aes(x = reorder(lab, -prop17), y = prop17,  fill = lab))  + scale_fill_manual(values = c("green", "red", "blue", "orange", "pink"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Rockhampton") + geom_text(aes(label = paste(round(prop17,1),"%"), vjust=-1), size=2.5)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

pd_k <- ggplot(pd_cap[pd_cap$division == "Keppel", ], aes(x = reorder(lab, -prop17), y = prop17,  fill = lab))  + scale_fill_manual(values = c("green", "red", "blue", "orange"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Keppel") + geom_text(aes(label = paste(round(prop17,1),"%"), vjust=-1), size=2.5)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

pd_m <- ggplot(pd_cap[pd_cap$division == "Mirani", ], aes(x = reorder(lab, -prop17), y = prop17,  fill = lab))  + scale_fill_manual(values = c("green", "red", "blue", "orange"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Mirani") + geom_text(aes(label = paste(round(prop17,1),"%"), vjust=-1), size=2.5)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

pd_b <- ggplot(pd_cap[pd_cap$division == "Burdekin", ], aes(x = reorder(lab, -prop17), y = prop17,  fill = lab))  + scale_fill_manual(values = c("green", "red", "blue", "orange"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Burdekin") + geom_text(aes(label = paste(round(prop17,1),"%"), vjust=-1), size=2.5)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

png("Slides/cap_2017/images/state_elec.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(pd_r, pd_k, pd_m, pd_b, ncol=2)
dev.off() 

# State results in Capricornia

cap2 <- pb17[pb17$fed_div == "Capricornia", ]

cap2 <- ddply(cap2, .(party), summarize, v17 = sum(votes17))

cap2$party <- as.character(cap2$party)

cap2[cap2$party == "ZZZ", ]$party <- "OTH"

cap2$p17 <- round(cap2$v17 / sum(cap2$v17) * 100, 2)

cap2 <- join(cap2, plab, "party")

cap17_tpp <- cap2$p17[cap2$party == "LNP"] + cap2$p17[cap2$party == "GRN"] * grn + cap2$p17[cap2$party == "ONP"] * onp + cap2$p17[cap2$party == "OTH"] * zzz

# PLOTS - State results in Capricornia by electorate

p_cap2 <- ggplot(cap2, aes(x = reorder(lab, -p17), y = p17,  fill = lab))  + scale_fill_manual(values = c("green", "red", "blue", "orange", "grey"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="State election within Capricornia") + geom_text(aes(label = paste(round(p17,1),"%"), vjust=-1), size=2.5)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

# PLOTS - Capricornia by party  ---- 

plab <- data.frame(cbind(c("ALP", "FFP", "GRN", "IND", "KAP", "LNP", "PUP", "LNQ", "OTH", "ONP"),
      c("Labor", "Family\nFirst", "Greens", "Independent", "Katter", "LNP", "PUP", "LNP", "Other", "One Nation")
      ))

colnames(plab) <- c("party", "lab")

cap16 <- join(cap16, plab, "party")

cap13 <- join(cap13, plab, "party")

cap10 <- join(cap10, plab, "party")

cap07 <- join(cap07, plab, "party")

p_cap16 <- ggplot(cap16, aes(x = reorder(lab, -p16), y = p16,  fill = lab))  + 
  scale_fill_manual(values = c("brown", "green", "grey", "pink", "red", "blue"))  + 
  geom_bar(stat="identity") + 
  theme_bw() + theme(legend.position="none") + 
  xlab("") + ylab("") + labs(title="Capricornia 2016") + 
  geom_text(aes(label = paste(round(p16,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + 
  theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank(), axis.text.x = element_text(size = 7)) + ylim(0,50)

p_cap13 <- ggplot(cap13, aes(x = reorder(lab, -p13), y = p13,  fill = lab))  + scale_fill_manual(values = c("brown", "green", "pink", "red", "blue", "grey", "yellow"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Capricornia 2013") + geom_text(aes(label = paste(round(p13,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

p_cap10 <- ggplot(cap10, aes(x = reorder(lab, -p10), y = p10,  fill = lab))  + scale_fill_manual(values = c("brown", "green", "red", "blue", "grey"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Capricornia 2010") + geom_text(aes(label = paste(round(p10,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,50)

p_cap07 <- ggplot(cap07, aes(x = reorder(lab, -p07), y = p07,  fill = lab))  + scale_fill_manual(values = c("brown", "green", "red", "blue", "grey"))  + geom_bar(stat="identity") + theme_bw() + theme(legend.position="none") + xlab("") + ylab("") + labs(title="Capricornia 2007") + geom_text(aes(label = paste(round(p07,1),"%"), vjust=-1), size=3)   + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme(panel.border = element_blank(), axis.line = element_line(colour="black"), axis.text.y = element_blank())   + ylim(0,60)

png("Slides/cap_2017/images/prim_cap.png", width = 8, height = 5, units = "in", res = 300)
grid.arrange(p_cap16, p_cap13, p_cap10, p_cap07, ncol=2)
dev.off()

png("Slides/cap_2017/images/tpp_h.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(tpp_h_p, tpp_h_v, ncol=1)
dev.off()

# TPP VOTES ---- 

# 2pp over decade ---- 

tpp_h <- as.data.frame(rbind(c(2016, 50.63, 44633),
  c(2013, 50.77, 43109),
  c(2010, 46.32, 37230),
  c(2007, 37.29, 31725)
))

colnames(tpp_h) <- c("year", "tpp", "v")

tpp_h$year <- as.character(tpp_h$year)

tpp_h$result <- c("LNP", "LNP", "ALP", "ALP")

tpp_hws <- as.data.frame(rbind(c("2017", cap17_tpp, 0, "ALP"), 
                               tpp_h))

tpp_hws$tpp <- as.numeric(tpp_hws$tpp)

# PLOTS - 2pp over a decade

tpp_h_p <- ggplot(tpp_h, aes(x = year, y = tpp, fill = result)) + geom_bar(stat="identity") + scale_fill_manual(values = c("red", "blue")) +  theme_classic() + labs(title="Two party preferred") + xlab("") + ylab("") + geom_text(aes(label = round(tpp,1), hjust = ifelse(tpp >= 0, 0.5, 0.5), vjust = -1), size=3) + theme(axis.text.x = element_text(size = 10, angle = 0), axis.ticks = element_blank(), axis.text.y = element_blank(), legend.position="none") + ylim(0,75)

tpp_h_v <- ggplot(tpp_h, aes(x = year, y = v, fill = result)) + geom_bar(stat="identity") + scale_fill_manual(values = c("red", "blue")) +  theme_classic() + labs(title="Two party preferred votes") + xlab("") + ylab("") + geom_text(aes(label = format(round(v,0), big.mark=",", trim = TRUE), hjust = ifelse(v >= 0, 0.5, 0.5), vjust = -1), size=3) + theme(axis.text.x = element_text(size = 10, angle = 0), axis.ticks = element_blank(), axis.text.y = element_blank(), legend.position="none") + ylim(0,50000)

tpp_hws_p <- ggplot(tpp_hws, aes(x = year, y = tpp, fill = result)) + geom_bar(stat="identity") + scale_fill_manual(values = c("red", "blue")) +  theme_classic() + labs(title="Two party preferred") + xlab("") + ylab("") + geom_text(aes(label = round(tpp,1), hjust = ifelse(tpp >= 0, 0.5, 0.5), vjust = -1), size=3) + theme(axis.text.x = element_text(size = 10, angle = 0), axis.ticks = element_blank(), axis.text.y = element_blank(), legend.position="none") + ylim(0,60)

png("Slides/cap_2017/images/cap_state.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p_cap2, tpp_hws_p, ncol=1)
dev.off()

# maps ----

labeltext=paste(pb17_sp@data$PollingPlace,"<br/>", "2016 Federal: ", round(pb17_sp@data$pvotes16_f*100,1), "%", "<br/>", "2017 State: ", round(pb17_sp@data$pvotes17_s*100, 1),"%", "<br/>", "Swing: ", round(pb17_sp@data$swing_s*100, 1), "%", sep="") %>% lapply(htmltools::HTML)

getColor <- function(tpp_sp) {
  sapply(tpp_sp@data$target, function(target) {
    if(target == "y") {
      "red"
    } else 
      "blue"
    })
}



icons <- awesomeIcons(
  icon = 'user-o',
  iconColor = 'black',
  library = 'fa',
  markerColor = getColor(pb17_sp)
)

leaflet(data = pb17_sp) %>% addProviderTiles(providers$CartoDB) %>% 
  addPolygons(data = cap_elec) %>%
  addAwesomeMarkers(label = labeltext, icon=icons, clusterOptions = markerClusterOptions())


# Polling booth Capricornia

tpp16 <- read.csv("HouseTppByPollingPlaceDownload-20499.csv", stringsAsFactors = FALSE, skip = 1)

tpp13 <- read.csv("HouseTppByPollingPlaceDownload-17496.csv", stringsAsFactors = FALSE, skip = 1)

tpp10 <- read.csv("HouseTppByPollingPlaceDownload-15508.csv", stringsAsFactors = FALSE, skip = 1)

tpp07 <- read.csv("HouseTppByPollingPlaceDownload-13745.csv", stringsAsFactors = FALSE, skip = 1)

tpp16c <- tpp16[tpp16$DivisionNm == "Capricornia", ]

tpp13c <- tpp13[tpp13$DivisionNm == "Capricornia", ]

tpp10c <- tpp10[tpp10$DivisionNm == "Capricornia", ]

tpp07c <- tpp07[tpp07$DivisionNm == "Capricornia", ]

tpp <- join(tpp16c, tpp13c, "PollingPlaceID")

tpp <- join(tpp, tpp10c, "PollingPlaceID")

tpp <- join(tpp, tpp07c, "PollingPlaceID")

tpp <- tpp[ , c(4, 5, 6, 7, 10, 11, 18, 19, 20, 21, 28, 29, 30, 31, 36, 37, 40, 41)]

colnames(tpp) <- c("ppid", "pp", "v16", "p16", "t16", "s16", "v13", "p13", "t13", "s13", "v10", "p10", "t10", "s10", "v07", "p07", "t07", "s07") 

codes <- read.csv("pp_cap.csv", stringsAsFactors = FALSE, skip = 0)

colnames(codes) <- c("pp", "code")

tpp <- join(tpp, codes, "pp")

tpp$lat_f <- cap_pb$lat_f

tpp$lon_f <- cap_pb$lon_f

tpp_sp <- tpp

tpp_sp <- tpp_sp[!is.na(tpp_sp$lon_f), ]

tpp_sp <- tpp_sp[tpp_sp$v16 != 0, ]

cp_sp <- cp

coordinates(tpp_sp) <- ~lon_f + lat_f

coordinates(cp_sp) <- ~lon + lat

cp_sp$index <- apply(gDistance(cp_sp, tpp_sp, byid=TRUE), 2, which.min)

tpp_sp$index <- 1:length(tpp_sp$pp)

tpp_sp@data <- join(tpp_sp@data, cp_sp@data, "index", match = "first" )

tpp_sp@data <- tpp_sp@data[ , c(2:21, 28)]

colnames(tpp_sp@data)[colnames(tpp_sp@data) == "tpp"] <- "p17_s"

colnames(tpp_sp@data)[colnames(tpp_sp@data) == "pp.1"] <- "pp_s"

tpp_sp@data$p17_s <- round(tpp_sp@data$p17_s *100, 2)

tpp_sp$pp_lab <- tpp_sp$pp 

tpp_sp$pp_lab[1] <- "Allenstown"
tpp_sp$pp_lab[2] <- "Alligator\nCreek"
tpp_sp$pp_lab[3] <- "Armstrong\nBeach"
tpp_sp$pp_lab[9] <- "Chelona"
tpp_sp$pp_lab[11] <- "Clermont\nPPVC"
tpp_sp$pp_lab[13] <- "Collinsville\nPPVC"
tpp_sp$pp_lab[14] <- "Coppabella\nPPVC"
tpp_sp$pp_lab[15] <- "Div PPVC"
tpp_sp$pp_lab[17] <- "Dysart\nPPVC"
tpp_sp$pp_lab[18] <- "Emmaus\nCollege"
tpp_sp$pp_lab[23] <- "Finch\nHatton"
tpp_sp$pp_lab[31] <- "Lakes\nCreek"
tpp_sp$pp_lab[32] <- "Mackay\nPPVC"
tpp_sp$pp_lab[36] <- "Moranbah\nCentral"
tpp_sp$pp_lab[37] <- "Moranbah\nPPVC"
tpp_sp$pp_lab[38] <- "Mount\nArcher"
tpp_sp$pp_lab[40] <- "Norman\nGardens"
tpp_sp$pp_lab[41] <- "North\nRocky"
tpp_sp$pp_lab[43] <- "Park\nAvenue"
tpp_sp$pp_lab[45] <- "Rocky\nPPVC"
tpp_sp$pp_lab[46] <- "Rocky\nCity"
tpp_sp$pp_lab[47] <- "Range"
tpp_sp$pp_lab[48] <- "Rocky\nSouth"
tpp_sp$pp_lab[49] <- "Sarina\nCentral"
tpp_sp$pp_lab[50] <- "Sarina\nPPVC"
tpp_sp$pp_lab[55] <- "West\nRocky"
tpp_sp$pp_lab[57] <- "Yeppoon\nNorth"
tpp_sp$pp_lab[58] <- "Yeppoon\nPPVC"

# Min-max analysis 2pp vote ----

tpp_sp@data$c17_s <- tpp_sp@data$p17_s - tpp_sp@data$p16

tpp_sp@data <- ddply(tpp_sp@data, .(pp), transform, min = min(p16, p13, p10,p07, na.rm = TRUE), max = max(p16, p13, p10,p07, na.rm = TRUE))

tpp_sp@data$c <- tpp_sp@data$max - tpp_sp@data$min 

tpp_sp@data$t_p16 <- tpp_sp@data$t16 / sum(tpp_sp@data$t16)

tpp_sp@data$c_w <- tpp_sp@data$c * tpp_sp@data$t_p16  

avg_tpp_change <- sum(tpp_sp@data$c_w)

tpp_sp@data$c_w_s <- tpp_sp@data$c17_s * tpp_sp@data$t_p16 

avg_tpp_change_s <- sum(tpp_sp@data$c_w_s, na.rm = TRUE)


# PLOTS - TPP polling booths Capricornia ----

# PLOTS - 2017 state election polling booths ---- 

reg <- c("RN", "RS", "C", "S", "M", "MY")

plot_f17 <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$p17_s) ,], aes(x = reorder(pp_lab, p17_s), y = p17_s)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p17_s,1), hjust = ifelse(p17_s >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75) 
   
}

plots_17 <- lapply(reg,plot_f17)

p.rn17 <- plots_17[[1]]

p.rs17 <- plots_17[[2]]

p.c17 <- plots_17[[3]]

p.s17 <- plots_17[[4]]

p.m17 <- plots_17[[5]]

p.my17 <- plots_17[[6]]

p.rn17 <- p.rn17 + labs(title="State election 2017") 

p.rs17 <- p.rs17 + labs(title="State election 2017") 

p.c17 <- p.c17 + labs(title="State election 2017") 

p.s17 <- p.s17 + labs(title="State election 2017") 

p.m17 <- p.m17 + labs(title="State election 2017") 

p.my17 <- p.my17 + labs(title="State election 2017") 

# PLOTS - 2016 TPP polling booths ----

plot_f16 <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$p16) ,], aes(x = reorder(pp_lab, p16), y = p16)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p16,1), hjust = ifelse(p16 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_16 <- lapply(reg,plot_f16)

p.rn16 <- plots_16[[1]]

p.rs16 <- plots_16[[2]]

p.c16 <- plots_16[[3]]

p.s16 <- plots_16[[4]]

p.m16 <- plots_16[[5]]

p.my16 <- plots_16[[6]]

p.rn16 <- p.rn16 + labs(title="2016") 

p.rs16 <- p.rs16 + labs(title="2016") 

p.c16 <- p.c16 + labs(title="2016") 

p.s16 <- p.s16 + labs(title="2016") 

p.m16 <- p.m16 + labs(title="2016") 

p.my16 <- p.my16 + labs(title="2016") 

# PLOTS - 2013 TPP polling booths ----

plot_f13 <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$p13) ,], aes(x = reorder(pp_lab, p13), y = p13)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p13,1), hjust = ifelse(p13 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_13 <- lapply(reg,plot_f13)

p.rn13 <- plots_13[[1]]

p.rs13 <- plots_13[[2]]

p.c13 <- plots_13[[3]]

p.s13 <- plots_13[[4]]

p.m13 <- plots_13[[5]]

p.my13 <- plots_13[[6]]

p.rn13 <- p.rn13 + labs(title="2013")

p.rs13 <- p.rs13 + labs(title="2013")

p.c13 <- p.c13 + labs(title="2013") 

p.s13 <- p.s13 + labs(title="2013") 

p.m13 <- p.m13 + labs(title="2013") 

p.my13 <- p.my13 + labs(title="2013") 

# PLOTS - 2010 TPP polling booths ---- 

plot_f10 <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$p10) ,], aes(x = reorder(pp_lab, p10), y = p10)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p10,1), hjust = ifelse(p10 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_10 <- lapply(reg,plot_f10)

p.rn10 <- plots_10[[1]]

p.rs10 <- plots_10[[2]]

p.c10 <- plots_10[[3]]

p.s10 <- plots_10[[4]]

p.m10 <- plots_10[[5]]

p.my10 <- plots_10[[6]]

p.rn10 <- p.rn10 + labs(title="2010")

p.rs10 <- p.rs10 + labs(title="2010") 

p.c10 <- p.c10 + labs(title="2010") 

p.s10 <- p.s10 + labs(title="2010") 

p.m10 <- p.m10 + labs(title="2010") 

p.my10 <- p.my10 + labs(title="2010") 

# PLOTS - 2007 TPP polling booths ----

plot_f07 <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$p07) ,], aes(x = reorder(pp_lab, p07), y = p07)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p07,1), hjust = ifelse(p07 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_07 <- lapply(reg,plot_f07)

p.rn07 <- plots_07[[1]]

p.rs07 <- plots_07[[2]]

p.c07 <- plots_07[[3]]

p.s07 <- plots_07[[4]]

p.m07 <- plots_07[[5]]

p.my07 <- plots_07[[6]]

p.rn07 <- p.rn07 + labs(title="2007") 

p.rs07 <- p.rs07 + labs(title="2007") 

p.c07 <- p.c07 + labs(title="2007") 

p.s07 <- p.s07 + labs(title="2007") 

p.m07 <- p.m07 + labs(title="2007") 

p.my07 <- p.my07 + labs(title="2007")

# OUTPUT - Capricornia polling booths

png("Slides/cap_2017/images/p_rn.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.rn16, p.rn13, p.rn10, p.rn07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_rs.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.rs16, p.rs13, p.rs10, p.rs07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_c.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.c16, p.c13, p.c10, p.c07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_s.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.s16, p.s13, p.s10, p.s07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_m.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.m16, p.m13, p.m10, p.m07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_my.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.my16, p.my13, p.my10, p.my07, ncol=2)
dev.off() 

# PRIMARY VOTES ----

# Import Federal primary data ----

ppp16 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-20499-QLD.csv", stringsAsFactors = FALSE, skip = 1)

ppp13 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-17496-QLD.csv", stringsAsFactors = FALSE, skip = 1)

ppp10 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-15508-QLD.csv", stringsAsFactors = FALSE, skip = 1)

ppp07 <- read.csv("HouseStateFirstPrefsByPollingPlaceDownload-13745-QLD.csv", stringsAsFactors = FALSE, skip = 1)

# Tidy Federal primary data ----

ppp16c <- ppp16[ppp16$DivisionNm == "Capricornia" & ppp16$PartyAb == "LNP",  ]

ppp13c <- ppp13[ppp13$DivisionNm == "Capricornia" & ppp13$PartyAb == "LNP", ]

ppp10c <- ppp10[ppp10$DivisionNm == "Capricornia" & ppp10$PartyAb == "LNQ", ]

ppp10c[ppp10c$PartyAb == "LNQ", ]$PartyAb <- "LNP"

ppp07c <- ppp07[ppp07$DivisionNm %in% "Capricornia" , ]

ppp07c <- ppp07c[ppp07c$PartyAb %in% c("LP", "NP"), ]

ppp07c <- ddply(ppp07c, .(PollingPlaceID), transform, v07 = sum(OrdinaryVotes))

ppp07c <- ppp07c[ppp07c$PartyAb == "LP", ] 

ppp07c[ppp07c$PartyAb == "LP", ]$PartyAb <- "LNP"

ppp <- join(ppp16c, ppp13c, by = c("PollingPlaceID"))

ppp <- join(ppp, ppp10c, by = c("PollingPlaceID"))

ppp <- join(ppp, ppp07c, by = c("PollingPlaceID"))

ppp <- ppp[ , c(4, 5, 12, 14, 28, 42, 58)] 

tppp16c <- ppp16[ppp16$DivisionNm == "Capricornia", ]

tppp16c <- ddply(tppp16c, .(PollingPlaceID, PollingPlace), summarize, t16 = sum(OrdinaryVotes))

tppp13c <- ppp13[ppp13$DivisionNm == "Capricornia", ]

tppp13c <- ddply(tppp13c, .(PollingPlaceID, PollingPlace), summarize, t13 = sum(OrdinaryVotes))

tppp10c <- ppp10[ppp10$DivisionNm == "Capricornia", ]

tppp10c <- ddply(tppp10c, .(PollingPlaceID, PollingPlace), summarize, t10 = sum(OrdinaryVotes))

tppp07c <- ppp07[ppp07$DivisionNm == "Capricornia", ]

tppp07c <- ddply(tppp07c, .(PollingPlaceID, PollingPlace), summarize, t07 = sum(OrdinaryVotes))

ppp$t16 <- tppp16c$t16[match(ppp$PollingPlaceID, tppp16c$PollingPlaceID)]

ppp$t13 <- tppp13c$t13[match(ppp$PollingPlaceID, tppp13c$PollingPlaceID)]

ppp$t10 <- tppp10c$t10[match(ppp$PollingPlaceID, tppp10c$PollingPlaceID)]

ppp$t07 <- tppp07c$t07[match(ppp$PollingPlaceID, tppp07c$PollingPlaceID)]

colnames(ppp) <- c("ppid", "pp", "party", "v16", "v13", "v10", "v07", "t16", "t13", "t10", "t07")

ppp$p16 <- round(ppp$v16 / ppp$t16 *100, 2)

ppp$p13 <- round(ppp$v13 / ppp$t13 *100, 2)

ppp$p10 <- round(ppp$v10 / ppp$t10 *100, 2)

ppp$p07 <- round(ppp$v07 / ppp$t07 *100, 2)

ppp <- ppp[ , c(1, 2, 4, 8, 12, 5, 9, 13, 6, 10, 14, 7, 11, 15)]

ppp$codes <- codes$code[match(ppp$pp, codes$pp)]

ppp$lat_f <- cap_pb$lat_f

ppp$lon_f <- cap_pb$lon_f

ppp_sp <- ppp

ppp_sp <- ppp_sp[!is.na(ppp_sp$lon_f), ]

ppp_sp <- ppp_sp[ppp_sp$v16 != 0, ]

coordinates(ppp_sp) <- ~lon_f + lat_f

ppp_sp@data$index <- 1:length(ppp_sp$pp)

ppp_sp@data$p17_s <- cp_sp@data$LNP[match(ppp_sp@data$index, cp_sp@data$index)]

ppp_sp@data$p17_s <- round(ppp_sp@data$p17_s * 100, 2)

ppp_sp$pp_lab <- tpp_sp$pp_lab

#PLOTS - 2016 primary polling booths ----

plot_p16 <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$p16) ,], aes(x = reorder(pp_lab, p16), y = p16)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p16,1), hjust = ifelse(p16 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_p16 <- lapply(reg,plot_p16)

p.prn16 <- plots_p16[[1]]

p.prs16 <- plots_p16[[2]]

p.pc16 <- plots_p16[[3]]

p.ps16 <- plots_p16[[4]]

p.pm16 <- plots_p16[[5]]

p.pmy16 <- plots_p16[[6]]

p.prn16 <- p.prn16 + labs(title="2016") 

p.prs16 <- p.prs16 + labs(title="2016") 

p.pc16 <- p.pc16 + labs(title="2016") 

p.ps16 <- p.ps16 + labs(title="2016") 

p.pm16 <- p.pm16 + labs(title="2016") 

p.pmy16 <- p.pmy16 + labs(title="2016") 

#PLOTS - 2013 primary polling booths ----

plot_p13 <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$p13) ,], aes(x = reorder(pp_lab, p13), y = p13)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p13,1), hjust = ifelse(p13 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_p13 <- lapply(reg,plot_p13)

p.prn13 <- plots_p13[[1]]

p.prs13 <- plots_p13[[2]]

p.pc13 <- plots_p13[[3]]

p.ps13 <- plots_p13[[4]]

p.pm13 <- plots_p13[[5]]

p.pmy13 <- plots_p13[[6]]

p.prn13 <- p.prn13 + labs(title="2013") 

p.prs13 <- p.prs13 + labs(title="2013") 

p.pc13 <- p.pc13 + labs(title="2013") 

p.ps13 <- p.ps13 + labs(title="2013") 

p.pm13 <- p.pm13 + labs(title="2013") 

p.pmy13 <- p.pmy13 + labs(title="2013") 

#PLOTS - 2010 primary polling booths ----

plot_p10 <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$p10) ,], aes(x = reorder(pp_lab, p10), y = p10)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p10,1), hjust = ifelse(p10 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_p10 <- lapply(reg,plot_p10)

p.prn10 <- plots_p10[[1]]

p.prs10 <- plots_p10[[2]]

p.pc10 <- plots_p10[[3]]

p.ps10 <- plots_p10[[4]]

p.pm10 <- plots_p10[[5]]

p.pmy10 <- plots_p10[[6]]

p.prn10 <- p.prn10 + labs(title="2010") 

p.prs10 <- p.prs10 + labs(title="2010") 

p.pc10 <- p.pc10 + labs(title="2010") 

p.ps10 <- p.ps10 + labs(title="2010") 

p.pm10 <- p.pm10 + labs(title="2010") 

p.pmy10 <- p.pmy10 + labs(title="2010") 

#PLOTS - 2007 primary polling booths ----

plot_p07 <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$p07) ,], aes(x = reorder(pp_lab, p07), y = p07)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p07,1), hjust = ifelse(p07 >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_p07 <- lapply(reg,plot_p07)

p.prn07 <- plots_p07[[1]]

p.prs07 <- plots_p07[[2]]

p.pc07 <- plots_p07[[3]]

p.ps07 <- plots_p07[[4]]

p.pm07 <- plots_p07[[5]]

p.pmy07 <- plots_p07[[6]]

p.prn07 <- p.prn07 + labs(title="2007") 

p.prs07 <- p.prs07 + labs(title="2007") 

p.pc07 <- p.pc07 + labs(title="2007") 

p.ps07 <- p.ps07 + labs(title="2007") 

p.pm07 <- p.pm07 + labs(title="2007") 

p.pmy07 <- p.pmy07 + labs(title="2007") 

# PLOTS - 2017 primary state election ----

plot_p17_s <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$p17_s) ,], aes(x = reorder(pp_lab, p17_s), y = p17_s)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(p17_s,1), hjust = ifelse(p17_s >= 0, 0.5, 0.5), vjust = -1), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0,75)
}

plots_p17_s <- lapply(reg,plot_p17_s)

p.prn17_s <- plots_p17_s[[1]]

p.prs17_s <- plots_p17_s[[2]]

p.pc17_s <- plots_p17_s[[3]]

p.ps17_s <- plots_p17_s[[4]]

p.pm17_s <- plots_p17_s[[5]]

p.pmy17_s <- plots_p17_s[[6]]

p.prn17_s <- p.prn17_s + labs(title="2017 state election") 

p.prs17_s <- p.prs17_s + labs(title="2017 state election") 

p.pc17_s <- p.pc17_s + labs(title="2017 state election") 

p.ps17_s <- p.ps17_s + labs(title="2017 state election") 

p.pm17_s <- p.pm17_s + labs(title="2017 state election") 

p.pmy17_s <- p.pmy17_s + labs(title="2017 state election") 

# Polling booth primary data output ----

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data") 

png("Slides/cap_2017/images/p_prn.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.prn16, p.prn13, p.prn10, p.prn07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_prs.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.prs16, p.prs13, p.prs10, p.prs07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_pc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.pc16, p.pc13, p.pc10, p.pc07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_ps.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.ps16, p.ps13, p.ps10, p.ps07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_pm.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.pm16, p.pm13, p.pm10, p.pm07, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_pmy.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.pmy16, p.pmy13, p.pmy10, p.pmy07, ncol=2)
dev.off() 

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data\\Slides\\cap_2017") 

slidify("index.Rmd")

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data")

# Min-max analysis primary vote ----

ppp_sp@data$c17_s <- ppp_sp@data$p17_s - ppp_sp@data$p16

ppp_sp@data <- ddply(ppp_sp@data, .(pp), transform, min = min(p16, p13, p10,p07, na.rm = TRUE), max = max(p16, p13, p10,p07, na.rm = TRUE))

ppp_sp@data$c <- ppp_sp@data$max - ppp_sp@data$min 

ppp_sp@data$t_p16 <- ppp_sp@data$t16 / sum(ppp_sp@data$t16)

ppp_sp@data$c_w <- ppp_sp@data$c * ppp_sp@data$t_p16  

avg_ppp_change <- sum(ppp_sp@data$c_w)

ppp_sp@data$c_w_s <- ppp_sp@data$c17_s * ppp_sp@data$t_p16 

avg_ppp_change_s <- sum(ppp_sp@data$c_w_s, na.rm = TRUE)

# PLOTS - min-max primary state v fed ----

plot_c17_s <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$c17_s) ,], aes(x = reorder(pp_lab, -c17_s), y = c17_s)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(c17_s,1), hjust = ifelse(c17_s >= 0, 0.5, 0.5), vjust = ifelse(c17_s >= 0, -1, 1.5)), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(-45, 10) + geom_hline(yintercept = avg_ppp_change_s, color = "red")
}

plots_c17_s <- lapply(reg,plot_c17_s)

p.crn17_s <- plots_c17_s[[1]]

p.crs17_s <- plots_c17_s[[2]]

p.cc17_s <- plots_c17_s[[3]]

p.cs17_s <- plots_c17_s[[4]]

p.cm17_s <- plots_c17_s[[5]]

p.cmy17_s <- plots_c17_s[[6]]

p.crn17_s <- p.crn17_s + labs(title="State v Fed primary votes") 

p.crs17_s <- p.crs17_s + labs(title="State v Fed primary votes") 

p.cc17_s <- p.cc17_s + labs(title="State v Fed primary votes") 

p.cs17_s <- p.cs17_s + labs(title="State v Fed primary votes") 

p.cm17_s <- p.cm17_s + labs(title="State v Fed primary votes") 

p.cmy17_s <- p.cmy17_s + labs(title="State v Fed primary votes") 

# PLOTS - min-max 2pp state v fed ----

plot_ct17_s <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$c17_s) ,], aes(x = reorder(pp_lab, -c17_s), y = c17_s)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(c17_s,1), hjust = ifelse(c17_s >= 0, 0.5, 0.5), vjust = ifelse(c17_s >= 0, -1, 1.5)), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(-25, 15) + geom_hline(yintercept = avg_tpp_change_s, color = "red")
}

plots_ct17_s <- lapply(reg,plot_ct17_s)

p.ctrn17_s <- plots_ct17_s[[1]]

p.ctrs17_s <- plots_ct17_s[[2]]

p.ctc17_s <- plots_ct17_s[[3]]

p.cts17_s <- plots_ct17_s[[4]]

p.ctm17_s <- plots_ct17_s[[5]]

p.ctmy17_s <- plots_ct17_s[[6]]

p.ctrn17_s <- p.ctrn17_s + labs(title="State v Fed 2PP") 

p.ctrs17_s <- p.ctrs17_s + labs(title="State v Fed 2PP") 

p.ctc17_s <- p.ctc17_s + labs(title="State v Fed 2PP") 

p.cts17_s <- p.cts17_s + labs(title="State v Fed 2PP") 

p.ctm17_s <- p.ctm17_s + labs(title="State v Fed 2PP") 

p.ctmy17_s <- p.ctmy17_s + labs(title="State v Fed 2PP") 

# PLOTS - min-max primary ---- 

plot_c <- function(x){
  g <- ggplot(ppp_sp@data[ppp_sp@data$code == x & !is.na(ppp_sp@data$c) ,], aes(x = reorder(pp_lab, c), y = c)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(c,1), hjust = ifelse(c >= 0, 0.5, 0.5), vjust = ifelse(c >= 0, -1, 1.5)), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0, 15)+ geom_hline(yintercept = avg_ppp_change, color = "red")
}

plots_c <- lapply(reg,plot_c)

p.crn <- plots_c[[1]]

p.crs <- plots_c[[2]]

p.cc <- plots_c[[3]]

p.cs <- plots_c[[4]]

p.cm <- plots_c[[5]]

p.cmy <- plots_c[[6]]

p.crn <- p.crn + labs(title="Difference in Fed primary")

p.crs <- p.crs + labs(title="Difference in Fed primary") 

p.cc <- p.cc + labs(title="Difference in Fed primary") 

p.cs <- p.cs + labs(title="Difference in Fed primary") 

p.cm <- p.cm + labs(title="Difference in Fed primary") + ylim(0,30)

p.cmy <- p.cmy + labs(title="Difference in Fed primary") 

# PLOTS - min-max 2pp ----

plot_tc <- function(x){
  g <- ggplot(tpp_sp@data[tpp_sp@data$code == x & !is.na(tpp_sp@data$c) ,], aes(x = reorder(pp_lab, c), y = c)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = round(c,1), hjust = ifelse(c >= 0, 0.5, 0.5), vjust = ifelse(c >= 0, -1, 1.5)), size=2.5) + theme(axis.text.x = element_text(size = 5, angle = 0), axis.ticks = element_blank()) + ylim(0, 30) + 
    geom_hline(yintercept = avg_tpp_change, color = "red")
}

plots_tc <- lapply(reg,plot_tc)

p.ctrn <- plots_tc[[1]]

p.ctrs <- plots_tc[[2]]

p.ctc <- plots_tc[[3]]

p.cts <- plots_tc[[4]]

p.ctm <- plots_tc[[5]]

p.ctmy <- plots_tc[[6]]

p.ctrn <- p.ctrn + labs(title="Difference in fed 2PP")

p.ctrs <- p.ctrs + labs(title="Difference in fed 2PP")

p.ctc <- p.ctc + labs(title="Difference in fed 2PP") 

p.cts <- p.cts + labs(title="Difference in fed 2PP") 

p.ctm <- p.ctm + labs(title="Difference in fed 2PP") + ylim(0,40)

p.ctmy <- p.ctmy + labs(title="Difference in fed 2PP")

# OUTPUT - min-max analysis ----

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data") 

png("Slides/cap_2017/images/p_rnc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.crn17_s,  p.crn,  p.ctrn17_s, p.ctrn, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_rsc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.crs17_s,  p.crs,  p.ctrs17_s, p.ctrs, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_cc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.cc17_s,  p.cc,  p.ctc17_s, p.ctc, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_sc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.cs17_s,  p.cs,  p.cts17_s, p.cts, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_mc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.cm17_s,  p.cm,  p.ctm17_s, p.ctm, ncol=2)
dev.off() 

png("Slides/cap_2017/images/p_myc.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(p.cmy17_s,  p.cmy,  p.ctmy17_s, p.ctmy, ncol=2)
dev.off() 

# MAPS ---- 

lab_tpp <- paste(tpp_sp@data$pp, " - ", tpp_sp@data$v16, " votes",  "<br/>", "2017 state: ", round(tpp_sp@data$p17_s,1), "%", "<br/>", "2016: ", round(tpp_sp@data$p16,1), "%", "<br/>", "2013: ", round(tpp_sp@data$p13,1),"%", "<br/>", "2010: ", round(tpp_sp@data$p10,1), "%", "<br/>", "2007: ", round(tpp_sp@data$p07,1), "%", sep="") %>% lapply(htmltools::HTML)

map.nr <- leaflet(data = tpp_sp) %>% addProviderTiles(providers$CartoDB) %>% 
  addPolygons(data = cap_elec) %>%
  addAwesomeMarkers(label = lab_tpp, icon=icons, clusterOptions = markerClusterOptions())

# SUMMARY STATS ---- 

sm <- ddply(tpp_sp@data, .(code), summarise, v16 = sum(v16), t16 = sum(t16), v13 = sum(v13), t13 = sum(t13), v10 = sum(v10, na.rm = TRUE), t10 = sum(t10, na.rm = TRUE), v07 = sum(v07, na.rm = TRUE), t07 = sum(t07, na.rm = TRUE))

sm <- sm[1:6, ]

sm$p16 <- sm$v16 / sm$t16

sm$p13 <- sm$v13 / sm$t13

sm$p10 <- sm$v10 / sm$t10

sm$p07 <- sm$v07 / sm$t07

sm$vc <- sm$v16 - sm$v07

sm$pc <- sm$p16 - sm$p07

sm$lab <- c("Capricorn\nCoast", "Rural\nareas", "Mackay","Rockhampton\nNorth", "Rockhampton\nSouth", "Sarina")

# PLOTS - summary stats

sp_p <- ggplot(sm, aes(x = reorder(lab, pc), y = pc*100)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = paste(round(pc*100,1), "%"), hjust = ifelse(pc >= 0, 0.5, 0.5), vjust = -1), size=3) + theme(axis.text.x = element_text(size = 8, angle = 0), axis.ticks = element_blank()) + ylim(0,20)

sp_v <- ggplot(sm, aes(x = reorder(lab, vc), y = vc)) + geom_bar(stat="identity", fill = "blue") +  theme_classic() + xlab("") + ylab("") + geom_text(aes(label = vc, hjust = ifelse(pc >= 0, 0.5, 0.5), vjust = -1), size=3) + theme(axis.text.x = element_text(size = 8, angle = 0), axis.ticks = element_blank()) #+ ylim(0,20)

png("Slides/cap_2017/images/p_sm.png", width = 10, height = 5, units = "in", res = 300)
grid.arrange(sp_p, ncol=1)
dev.off() 

# SLIDE OPTIONS FOR FEDERAL

p.vert <- theme(axis.text.x = element_text(angle =  90, size = 7, vjust = 0.5, hjust = 1))

targets <- data.frame(c("North Rockhampton", "South Rockhampton", "Capricorn Coast", "Rural areas", "Sarina", "Mackay"), 
          c(paste( "Emmaus College", "Norman Gardens", "Frenchville", "Glenmmore", "Parkhurst", sep = ", "), 
          c("The Range"), 
          paste("The Caves","Yeppoon North", "Farnborough", "Keppel Sands", "Yeppoon", sep = ", "), 
          paste( "Glenden", "Middlemount", "Moranbah", "Dysart", "Collinsville", sep = ", "),
          paste("Carmila", "Koumala", "Armstrong Beach", sep = ", "), 
          paste("Eton", "Finch Hatton", "Marian", sep = ", ")))

colnames(targets) <- c("Region", "Target booths")

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data\\Slides\\cap_2017") 

slidify("index.Rmd")

setwd("C:\\Users\\matt\\Dropbox\\2a. Election\\Data")


# ONE NATION

p <- as_tibble(pb17)

p <- p %>% 
  select(-ballotOrderNumber, -surname, -givenNames) %>% 
  rename(pp = PB,
         v17 = votes17) %>% 
  select(pp, div, fed_div, party, v17, lat, lon)

p$pp <- as.character(p$pp)
p$div <- as.character(p$div)
p$fed_div <- as.character(p$fed_div)
p$party <- as.character(p$party)
p$ppid <- 1:length(p$pp)

p$pp_unique <- paste(p$pp, p$div, sep=" - ")

p <- p %>% 
  group_by(pp_unique) %>% 
  mutate(p17 = v17 / sum(v17))
  
p_on_box <- p %>% 
  filter(fed_div == "Capricornia", party == "ONP") %>% 
  ggplot(aes(x = reorder(div, p17), y = p17 * 100)) +
    geom_boxplot(varwidth=T, fill="#ff8c00") +
    theme_classic() +
    xlab("") + ylab("") +
    labs(title="One Nation vote in Capricornia at the 2017 state election")


p$pp[p$pp == "Returning Officer Mirani Pre-Poll"] <- "Mirani prepoll"

p$pp[p$pp == "Returning Officer Rockhampton Pre-Poll"] <- "Rocky prepoll"


p_on <- p %>%
  filter(fed_div == "Capricornia", party == "ONP") %>%
  split(.$div) %>%
  map(~ggplot(.,aes(reorder(pp, p17), p17 * 100)) +
        geom_bar(stat = "identity", fill = "#ff8c00") +
        theme_classic() +
        theme(axis.text.x = element_text(angle =  90, size = 7, vjust = 0.5, hjust = 1), axis.ticks = element_blank()) +
        geom_text(aes(label = round(p17 * 100,1)), hjust = 0.5, vjust = -0.8, size=3) +
        xlab("") + ylab("") +
        ylim(0,75)
    )

p_on_burd <- p_on[[1]]
p_on_kepp <- p_on[[2]]
p_on_mir <- p_on[[3]]
p_on_rock <- p_on[[4]]



p_f_t <- function (x) { 
p %>%
  filter(fed_div == "Capricornia", party == x) %>%
  split(.$div) %>%
  plots2 <- map(~ggplot(.,aes(reorder(pp, p17), p17 * 100)) +
        geom_bar(stat = "identity", fill = "#ff8c00") +
        theme_classic() +
        theme(axis.text.x = element_text(angle =  90, size = 7, vjust = 0.5, hjust = 1), axis.ticks = element_blank()) +
        geom_text(aes(label = round(p17 * 100,1)), hjust = 0.5, vjust = -0.8, size=3) +
        xlab("") + ylab("") +
        ylim(0,75)
  )
}

map(unique(p$party), p_f_t)
